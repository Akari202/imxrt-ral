#[doc = "CCM"]
#[repr(C)]
pub struct RegisterBlock {
    #[doc = "Clock root select Registers"]
    pub CLOCK_ROOT: [clockroot::RegisterBlock; 79usize],
    _reserved0: [u8; 0x1880],
    #[doc = "Clock group control"]
    pub CLOCK_GROUP0_CONTROL: crate::RWRegister<u32>,
    #[doc = "Clock group control"]
    pub CLOCK_GROUP0_CONTROL_SET: crate::RWRegister<u32>,
    #[doc = "Clock group control"]
    pub CLOCK_GROUP0_CONTROL_CLR: crate::RWRegister<u32>,
    #[doc = "Clock group control"]
    pub CLOCK_GROUP0_CONTROL_TOG: crate::RWRegister<u32>,
    _reserved1: [u8; 0x10],
    #[doc = "Clock group working status"]
    pub CLOCK_GROUP0_STATUS0: crate::RWRegister<u32>,
    #[doc = "Clock group low power/extend status"]
    pub CLOCK_GROUP0_STATUS1: crate::RORegister<u32>,
    _reserved2: [u8; 0x04],
    #[doc = "Clock group configuration"]
    pub CLOCK_GROUP0_CONFIG: crate::RORegister<u32>,
    #[doc = "Clock group access control"]
    pub CLOCK_GROUP0_AUTHEN: crate::RWRegister<u32>,
    #[doc = "Clock group access control"]
    pub CLOCK_GROUP0_AUTHEN_SET: crate::RWRegister<u32>,
    #[doc = "Clock group access control"]
    pub CLOCK_GROUP0_AUTHEN_CLR: crate::RWRegister<u32>,
    #[doc = "Clock group access control"]
    pub CLOCK_GROUP0_AUTHEN_TOG: crate::RWRegister<u32>,
    #[doc = "Setpoint setting"]
    pub CLOCK_GROUP0_SETPOINT0: crate::RWRegister<u32>,
    #[doc = "Setpoint setting"]
    pub CLOCK_GROUP0_SETPOINT1: crate::RWRegister<u32>,
    #[doc = "Setpoint setting"]
    pub CLOCK_GROUP0_SETPOINT2: crate::RWRegister<u32>,
    #[doc = "Setpoint setting"]
    pub CLOCK_GROUP0_SETPOINT3: crate::RWRegister<u32>,
    #[doc = "Setpoint setting"]
    pub CLOCK_GROUP0_SETPOINT4: crate::RWRegister<u32>,
    #[doc = "Setpoint setting"]
    pub CLOCK_GROUP0_SETPOINT5: crate::RWRegister<u32>,
    #[doc = "Setpoint setting"]
    pub CLOCK_GROUP0_SETPOINT6: crate::RWRegister<u32>,
    #[doc = "Setpoint setting"]
    pub CLOCK_GROUP0_SETPOINT7: crate::RWRegister<u32>,
    #[doc = "Setpoint setting"]
    pub CLOCK_GROUP0_SETPOINT8: crate::RWRegister<u32>,
    #[doc = "Setpoint setting"]
    pub CLOCK_GROUP0_SETPOINT9: crate::RWRegister<u32>,
    #[doc = "Setpoint setting"]
    pub CLOCK_GROUP0_SETPOINT10: crate::RWRegister<u32>,
    #[doc = "Setpoint setting"]
    pub CLOCK_GROUP0_SETPOINT11: crate::RWRegister<u32>,
    #[doc = "Setpoint setting"]
    pub CLOCK_GROUP0_SETPOINT12: crate::RWRegister<u32>,
    #[doc = "Setpoint setting"]
    pub CLOCK_GROUP0_SETPOINT13: crate::RWRegister<u32>,
    #[doc = "Setpoint setting"]
    pub CLOCK_GROUP0_SETPOINT14: crate::RWRegister<u32>,
    #[doc = "Setpoint setting"]
    pub CLOCK_GROUP0_SETPOINT15: crate::RWRegister<u32>,
    #[doc = "Clock group control"]
    pub CLOCK_GROUP1_CONTROL: crate::RWRegister<u32>,
    #[doc = "Clock group control"]
    pub CLOCK_GROUP1_CONTROL_SET: crate::RWRegister<u32>,
    #[doc = "Clock group control"]
    pub CLOCK_GROUP1_CONTROL_CLR: crate::RWRegister<u32>,
    #[doc = "Clock group control"]
    pub CLOCK_GROUP1_CONTROL_TOG: crate::RWRegister<u32>,
    _reserved3: [u8; 0x10],
    #[doc = "Clock group working status"]
    pub CLOCK_GROUP1_STATUS0: crate::RWRegister<u32>,
    #[doc = "Clock group low power/extend status"]
    pub CLOCK_GROUP1_STATUS1: crate::RORegister<u32>,
    _reserved4: [u8; 0x04],
    #[doc = "Clock group configuration"]
    pub CLOCK_GROUP1_CONFIG: crate::RORegister<u32>,
    #[doc = "Clock group access control"]
    pub CLOCK_GROUP1_AUTHEN: crate::RWRegister<u32>,
    #[doc = "Clock group access control"]
    pub CLOCK_GROUP1_AUTHEN_SET: crate::RWRegister<u32>,
    #[doc = "Clock group access control"]
    pub CLOCK_GROUP1_AUTHEN_CLR: crate::RWRegister<u32>,
    #[doc = "Clock group access control"]
    pub CLOCK_GROUP1_AUTHEN_TOG: crate::RWRegister<u32>,
    #[doc = "Setpoint setting"]
    pub CLOCK_GROUP1_SETPOINT0: crate::RWRegister<u32>,
    #[doc = "Setpoint setting"]
    pub CLOCK_GROUP1_SETPOINT1: crate::RWRegister<u32>,
    #[doc = "Setpoint setting"]
    pub CLOCK_GROUP1_SETPOINT2: crate::RWRegister<u32>,
    #[doc = "Setpoint setting"]
    pub CLOCK_GROUP1_SETPOINT3: crate::RWRegister<u32>,
    #[doc = "Setpoint setting"]
    pub CLOCK_GROUP1_SETPOINT4: crate::RWRegister<u32>,
    #[doc = "Setpoint setting"]
    pub CLOCK_GROUP1_SETPOINT5: crate::RWRegister<u32>,
    #[doc = "Setpoint setting"]
    pub CLOCK_GROUP1_SETPOINT6: crate::RWRegister<u32>,
    #[doc = "Setpoint setting"]
    pub CLOCK_GROUP1_SETPOINT7: crate::RWRegister<u32>,
    #[doc = "Setpoint setting"]
    pub CLOCK_GROUP1_SETPOINT8: crate::RWRegister<u32>,
    #[doc = "Setpoint setting"]
    pub CLOCK_GROUP1_SETPOINT9: crate::RWRegister<u32>,
    #[doc = "Setpoint setting"]
    pub CLOCK_GROUP1_SETPOINT10: crate::RWRegister<u32>,
    #[doc = "Setpoint setting"]
    pub CLOCK_GROUP1_SETPOINT11: crate::RWRegister<u32>,
    #[doc = "Setpoint setting"]
    pub CLOCK_GROUP1_SETPOINT12: crate::RWRegister<u32>,
    #[doc = "Setpoint setting"]
    pub CLOCK_GROUP1_SETPOINT13: crate::RWRegister<u32>,
    #[doc = "Setpoint setting"]
    pub CLOCK_GROUP1_SETPOINT14: crate::RWRegister<u32>,
    #[doc = "Setpoint setting"]
    pub CLOCK_GROUP1_SETPOINT15: crate::RWRegister<u32>,
    _reserved5: [u8; 0x0700],
    #[doc = "General Purpose Registers"]
    pub GPR_SHARED: [gprshared::RegisterBlock; 8usize],
    _reserved6: [u8; 0x0320],
    #[doc = "General Purpose Register"]
    pub GPR_PRIVATE1: crate::RWRegister<u32>,
    #[doc = "General Purpose Register"]
    pub GPR_PRIVATE1_SET: crate::RWRegister<u32>,
    #[doc = "General Purpose Register"]
    pub GPR_PRIVATE1_CLR: crate::RWRegister<u32>,
    #[doc = "General Purpose Register"]
    pub GPR_PRIVATE1_TOG: crate::RWRegister<u32>,
    #[doc = "GPR access control"]
    pub GPR_PRIVATE1_AUTHEN: crate::RWRegister<u32>,
    #[doc = "GPR access control"]
    pub GPR_PRIVATE1_AUTHEN_SET: crate::RWRegister<u32>,
    #[doc = "GPR access control"]
    pub GPR_PRIVATE1_AUTHEN_CLR: crate::RWRegister<u32>,
    #[doc = "GPR access control"]
    pub GPR_PRIVATE1_AUTHEN_TOG: crate::RWRegister<u32>,
    #[doc = "General Purpose Register"]
    pub GPR_PRIVATE2: crate::RWRegister<u32>,
    #[doc = "General Purpose Register"]
    pub GPR_PRIVATE2_SET: crate::RWRegister<u32>,
    #[doc = "General Purpose Register"]
    pub GPR_PRIVATE2_CLR: crate::RWRegister<u32>,
    #[doc = "General Purpose Register"]
    pub GPR_PRIVATE2_TOG: crate::RWRegister<u32>,
    #[doc = "GPR access control"]
    pub GPR_PRIVATE2_AUTHEN: crate::RWRegister<u32>,
    #[doc = "GPR access control"]
    pub GPR_PRIVATE2_AUTHEN_SET: crate::RWRegister<u32>,
    #[doc = "GPR access control"]
    pub GPR_PRIVATE2_AUTHEN_CLR: crate::RWRegister<u32>,
    #[doc = "GPR access control"]
    pub GPR_PRIVATE2_AUTHEN_TOG: crate::RWRegister<u32>,
    #[doc = "General Purpose Register"]
    pub GPR_PRIVATE3: crate::RWRegister<u32>,
    #[doc = "General Purpose Register"]
    pub GPR_PRIVATE3_SET: crate::RWRegister<u32>,
    #[doc = "General Purpose Register"]
    pub GPR_PRIVATE3_CLR: crate::RWRegister<u32>,
    #[doc = "General Purpose Register"]
    pub GPR_PRIVATE3_TOG: crate::RWRegister<u32>,
    #[doc = "GPR access control"]
    pub GPR_PRIVATE3_AUTHEN: crate::RWRegister<u32>,
    #[doc = "GPR access control"]
    pub GPR_PRIVATE3_AUTHEN_SET: crate::RWRegister<u32>,
    #[doc = "GPR access control"]
    pub GPR_PRIVATE3_AUTHEN_CLR: crate::RWRegister<u32>,
    #[doc = "GPR access control"]
    pub GPR_PRIVATE3_AUTHEN_TOG: crate::RWRegister<u32>,
    #[doc = "General Purpose Register"]
    pub GPR_PRIVATE4: crate::RWRegister<u32>,
    #[doc = "General Purpose Register"]
    pub GPR_PRIVATE4_SET: crate::RWRegister<u32>,
    #[doc = "General Purpose Register"]
    pub GPR_PRIVATE4_CLR: crate::RWRegister<u32>,
    #[doc = "General Purpose Register"]
    pub GPR_PRIVATE4_TOG: crate::RWRegister<u32>,
    #[doc = "GPR access control"]
    pub GPR_PRIVATE4_AUTHEN: crate::RWRegister<u32>,
    #[doc = "GPR access control"]
    pub GPR_PRIVATE4_AUTHEN_SET: crate::RWRegister<u32>,
    #[doc = "GPR access control"]
    pub GPR_PRIVATE4_AUTHEN_CLR: crate::RWRegister<u32>,
    #[doc = "GPR access control"]
    pub GPR_PRIVATE4_AUTHEN_TOG: crate::RWRegister<u32>,
    #[doc = "General Purpose Register"]
    pub GPR_PRIVATE5: crate::RWRegister<u32>,
    #[doc = "General Purpose Register"]
    pub GPR_PRIVATE5_SET: crate::RWRegister<u32>,
    #[doc = "General Purpose Register"]
    pub GPR_PRIVATE5_CLR: crate::RWRegister<u32>,
    #[doc = "General Purpose Register"]
    pub GPR_PRIVATE5_TOG: crate::RWRegister<u32>,
    #[doc = "GPR access control"]
    pub GPR_PRIVATE5_AUTHEN: crate::RWRegister<u32>,
    #[doc = "GPR access control"]
    pub GPR_PRIVATE5_AUTHEN_SET: crate::RWRegister<u32>,
    #[doc = "GPR access control"]
    pub GPR_PRIVATE5_AUTHEN_CLR: crate::RWRegister<u32>,
    #[doc = "GPR access control"]
    pub GPR_PRIVATE5_AUTHEN_TOG: crate::RWRegister<u32>,
    #[doc = "General Purpose Register"]
    pub GPR_PRIVATE6: crate::RWRegister<u32>,
    #[doc = "General Purpose Register"]
    pub GPR_PRIVATE6_SET: crate::RWRegister<u32>,
    #[doc = "General Purpose Register"]
    pub GPR_PRIVATE6_CLR: crate::RWRegister<u32>,
    #[doc = "General Purpose Register"]
    pub GPR_PRIVATE6_TOG: crate::RWRegister<u32>,
    #[doc = "GPR access control"]
    pub GPR_PRIVATE6_AUTHEN: crate::RWRegister<u32>,
    #[doc = "GPR access control"]
    pub GPR_PRIVATE6_AUTHEN_SET: crate::RWRegister<u32>,
    #[doc = "GPR access control"]
    pub GPR_PRIVATE6_AUTHEN_CLR: crate::RWRegister<u32>,
    #[doc = "GPR access control"]
    pub GPR_PRIVATE6_AUTHEN_TOG: crate::RWRegister<u32>,
    #[doc = "General Purpose Register"]
    pub GPR_PRIVATE7: crate::RWRegister<u32>,
    #[doc = "General Purpose Register"]
    pub GPR_PRIVATE7_SET: crate::RWRegister<u32>,
    #[doc = "General Purpose Register"]
    pub GPR_PRIVATE7_CLR: crate::RWRegister<u32>,
    #[doc = "General Purpose Register"]
    pub GPR_PRIVATE7_TOG: crate::RWRegister<u32>,
    #[doc = "GPR access control"]
    pub GPR_PRIVATE7_AUTHEN: crate::RWRegister<u32>,
    #[doc = "GPR access control"]
    pub GPR_PRIVATE7_AUTHEN_SET: crate::RWRegister<u32>,
    #[doc = "GPR access control"]
    pub GPR_PRIVATE7_AUTHEN_CLR: crate::RWRegister<u32>,
    #[doc = "GPR access control"]
    pub GPR_PRIVATE7_AUTHEN_TOG: crate::RWRegister<u32>,
    _reserved7: [u8; 0x0300],
    #[doc = "Clock source select Registers"]
    pub OSCPLL: [oscpll::RegisterBlock; 29usize],
    _reserved8: [u8; 0x0c60],
    #[doc = "LPCG direct control"]
    pub LPCG0_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG0_DOMAIN: crate::RWRegister<u32>,
    _reserved9: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG0_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG0_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG0_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG0_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG1_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG1_DOMAIN: crate::RWRegister<u32>,
    _reserved10: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG1_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG1_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG1_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG1_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG2_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG2_DOMAIN: crate::RWRegister<u32>,
    #[doc = "LPCG Setpoint setting"]
    pub LPCG2_SETPOINT: crate::RWRegister<u32>,
    _reserved11: [u8; 0x04],
    #[doc = "LPCG working status"]
    pub LPCG2_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG2_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG2_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG2_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG3_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG3_DOMAIN: crate::RWRegister<u32>,
    #[doc = "LPCG Setpoint setting"]
    pub LPCG3_SETPOINT: crate::RWRegister<u32>,
    _reserved12: [u8; 0x04],
    #[doc = "LPCG working status"]
    pub LPCG3_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG3_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG3_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG3_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG4_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG4_DOMAIN: crate::RWRegister<u32>,
    #[doc = "LPCG Setpoint setting"]
    pub LPCG4_SETPOINT: crate::RWRegister<u32>,
    _reserved13: [u8; 0x04],
    #[doc = "LPCG working status"]
    pub LPCG4_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG4_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG4_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG4_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG5_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG5_DOMAIN: crate::RWRegister<u32>,
    #[doc = "LPCG Setpoint setting"]
    pub LPCG5_SETPOINT: crate::RWRegister<u32>,
    _reserved14: [u8; 0x04],
    #[doc = "LPCG working status"]
    pub LPCG5_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG5_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG5_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG5_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG6_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG6_DOMAIN: crate::RWRegister<u32>,
    #[doc = "LPCG Setpoint setting"]
    pub LPCG6_SETPOINT: crate::RWRegister<u32>,
    _reserved15: [u8; 0x04],
    #[doc = "LPCG working status"]
    pub LPCG6_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG6_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG6_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG6_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG7_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG7_DOMAIN: crate::RWRegister<u32>,
    #[doc = "LPCG Setpoint setting"]
    pub LPCG7_SETPOINT: crate::RWRegister<u32>,
    _reserved16: [u8; 0x04],
    #[doc = "LPCG working status"]
    pub LPCG7_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG7_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG7_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG7_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG8_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG8_DOMAIN: crate::RWRegister<u32>,
    #[doc = "LPCG Setpoint setting"]
    pub LPCG8_SETPOINT: crate::RWRegister<u32>,
    _reserved17: [u8; 0x04],
    #[doc = "LPCG working status"]
    pub LPCG8_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG8_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG8_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG8_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG9_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG9_DOMAIN: crate::RWRegister<u32>,
    #[doc = "LPCG Setpoint setting"]
    pub LPCG9_SETPOINT: crate::RWRegister<u32>,
    _reserved18: [u8; 0x04],
    #[doc = "LPCG working status"]
    pub LPCG9_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG9_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG9_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG9_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG10_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG10_DOMAIN: crate::RWRegister<u32>,
    #[doc = "LPCG Setpoint setting"]
    pub LPCG10_SETPOINT: crate::RWRegister<u32>,
    _reserved19: [u8; 0x04],
    #[doc = "LPCG working status"]
    pub LPCG10_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG10_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG10_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG10_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG11_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG11_DOMAIN: crate::RWRegister<u32>,
    #[doc = "LPCG Setpoint setting"]
    pub LPCG11_SETPOINT: crate::RWRegister<u32>,
    _reserved20: [u8; 0x04],
    #[doc = "LPCG working status"]
    pub LPCG11_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG11_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG11_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG11_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG12_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG12_DOMAIN: crate::RWRegister<u32>,
    #[doc = "LPCG Setpoint setting"]
    pub LPCG12_SETPOINT: crate::RWRegister<u32>,
    _reserved21: [u8; 0x04],
    #[doc = "LPCG working status"]
    pub LPCG12_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG12_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG12_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG12_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG13_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG13_DOMAIN: crate::RWRegister<u32>,
    _reserved22: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG13_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG13_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG13_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG13_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG14_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG14_DOMAIN: crate::RWRegister<u32>,
    #[doc = "LPCG Setpoint setting"]
    pub LPCG14_SETPOINT: crate::RWRegister<u32>,
    _reserved23: [u8; 0x04],
    #[doc = "LPCG working status"]
    pub LPCG14_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG14_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG14_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG14_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG15_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG15_DOMAIN: crate::RWRegister<u32>,
    #[doc = "LPCG Setpoint setting"]
    pub LPCG15_SETPOINT: crate::RWRegister<u32>,
    _reserved24: [u8; 0x04],
    #[doc = "LPCG working status"]
    pub LPCG15_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG15_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG15_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG15_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG16_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG16_DOMAIN: crate::RWRegister<u32>,
    #[doc = "LPCG Setpoint setting"]
    pub LPCG16_SETPOINT: crate::RWRegister<u32>,
    _reserved25: [u8; 0x04],
    #[doc = "LPCG working status"]
    pub LPCG16_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG16_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG16_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG16_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG17_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG17_DOMAIN: crate::RWRegister<u32>,
    #[doc = "LPCG Setpoint setting"]
    pub LPCG17_SETPOINT: crate::RWRegister<u32>,
    _reserved26: [u8; 0x04],
    #[doc = "LPCG working status"]
    pub LPCG17_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG17_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG17_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG17_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG18_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG18_DOMAIN: crate::RWRegister<u32>,
    #[doc = "LPCG Setpoint setting"]
    pub LPCG18_SETPOINT: crate::RWRegister<u32>,
    _reserved27: [u8; 0x04],
    #[doc = "LPCG working status"]
    pub LPCG18_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG18_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG18_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG18_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG19_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG19_DOMAIN: crate::RWRegister<u32>,
    #[doc = "LPCG Setpoint setting"]
    pub LPCG19_SETPOINT: crate::RWRegister<u32>,
    _reserved28: [u8; 0x04],
    #[doc = "LPCG working status"]
    pub LPCG19_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG19_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG19_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG19_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG20_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG20_DOMAIN: crate::RWRegister<u32>,
    _reserved29: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG20_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG20_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG20_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG20_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG21_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG21_DOMAIN: crate::RWRegister<u32>,
    _reserved30: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG21_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG21_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG21_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG21_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG22_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG22_DOMAIN: crate::RWRegister<u32>,
    _reserved31: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG22_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG22_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG22_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG22_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG23_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG23_DOMAIN: crate::RWRegister<u32>,
    _reserved32: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG23_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG23_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG23_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG23_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG24_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG24_DOMAIN: crate::RWRegister<u32>,
    #[doc = "LPCG Setpoint setting"]
    pub LPCG24_SETPOINT: crate::RWRegister<u32>,
    _reserved33: [u8; 0x04],
    #[doc = "LPCG working status"]
    pub LPCG24_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG24_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG24_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG24_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG25_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG25_DOMAIN: crate::RWRegister<u32>,
    #[doc = "LPCG Setpoint setting"]
    pub LPCG25_SETPOINT: crate::RWRegister<u32>,
    _reserved34: [u8; 0x04],
    #[doc = "LPCG working status"]
    pub LPCG25_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG25_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG25_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG25_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG26_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG26_DOMAIN: crate::RWRegister<u32>,
    #[doc = "LPCG Setpoint setting"]
    pub LPCG26_SETPOINT: crate::RWRegister<u32>,
    _reserved35: [u8; 0x04],
    #[doc = "LPCG working status"]
    pub LPCG26_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG26_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG26_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG26_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG27_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG27_DOMAIN: crate::RWRegister<u32>,
    #[doc = "LPCG Setpoint setting"]
    pub LPCG27_SETPOINT: crate::RWRegister<u32>,
    _reserved36: [u8; 0x04],
    #[doc = "LPCG working status"]
    pub LPCG27_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG27_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG27_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG27_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG28_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG28_DOMAIN: crate::RWRegister<u32>,
    #[doc = "LPCG Setpoint setting"]
    pub LPCG28_SETPOINT: crate::RWRegister<u32>,
    _reserved37: [u8; 0x04],
    #[doc = "LPCG working status"]
    pub LPCG28_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG28_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG28_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG28_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG29_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG29_DOMAIN: crate::RWRegister<u32>,
    #[doc = "LPCG Setpoint setting"]
    pub LPCG29_SETPOINT: crate::RWRegister<u32>,
    _reserved38: [u8; 0x04],
    #[doc = "LPCG working status"]
    pub LPCG29_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG29_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG29_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG29_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG30_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG30_DOMAIN: crate::RWRegister<u32>,
    #[doc = "LPCG Setpoint setting"]
    pub LPCG30_SETPOINT: crate::RWRegister<u32>,
    _reserved39: [u8; 0x04],
    #[doc = "LPCG working status"]
    pub LPCG30_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG30_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG30_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG30_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG31_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG31_DOMAIN: crate::RWRegister<u32>,
    #[doc = "LPCG Setpoint setting"]
    pub LPCG31_SETPOINT: crate::RWRegister<u32>,
    _reserved40: [u8; 0x04],
    #[doc = "LPCG working status"]
    pub LPCG31_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG31_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG31_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG31_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG32_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG32_DOMAIN: crate::RWRegister<u32>,
    #[doc = "LPCG Setpoint setting"]
    pub LPCG32_SETPOINT: crate::RWRegister<u32>,
    _reserved41: [u8; 0x04],
    #[doc = "LPCG working status"]
    pub LPCG32_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG32_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG32_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG32_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG33_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG33_DOMAIN: crate::RWRegister<u32>,
    #[doc = "LPCG Setpoint setting"]
    pub LPCG33_SETPOINT: crate::RWRegister<u32>,
    _reserved42: [u8; 0x04],
    #[doc = "LPCG working status"]
    pub LPCG33_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG33_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG33_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG33_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG34_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG34_DOMAIN: crate::RWRegister<u32>,
    #[doc = "LPCG Setpoint setting"]
    pub LPCG34_SETPOINT: crate::RWRegister<u32>,
    _reserved43: [u8; 0x04],
    #[doc = "LPCG working status"]
    pub LPCG34_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG34_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG34_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG34_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG35_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG35_DOMAIN: crate::RWRegister<u32>,
    #[doc = "LPCG Setpoint setting"]
    pub LPCG35_SETPOINT: crate::RWRegister<u32>,
    _reserved44: [u8; 0x04],
    #[doc = "LPCG working status"]
    pub LPCG35_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG35_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG35_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG35_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG36_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG36_DOMAIN: crate::RWRegister<u32>,
    #[doc = "LPCG Setpoint setting"]
    pub LPCG36_SETPOINT: crate::RWRegister<u32>,
    _reserved45: [u8; 0x04],
    #[doc = "LPCG working status"]
    pub LPCG36_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG36_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG36_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG36_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG37_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG37_DOMAIN: crate::RWRegister<u32>,
    #[doc = "LPCG Setpoint setting"]
    pub LPCG37_SETPOINT: crate::RWRegister<u32>,
    _reserved46: [u8; 0x04],
    #[doc = "LPCG working status"]
    pub LPCG37_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG37_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG37_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG37_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG38_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG38_DOMAIN: crate::RWRegister<u32>,
    #[doc = "LPCG Setpoint setting"]
    pub LPCG38_SETPOINT: crate::RWRegister<u32>,
    _reserved47: [u8; 0x04],
    #[doc = "LPCG working status"]
    pub LPCG38_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG38_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG38_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG38_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG39_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG39_DOMAIN: crate::RWRegister<u32>,
    #[doc = "LPCG Setpoint setting"]
    pub LPCG39_SETPOINT: crate::RWRegister<u32>,
    _reserved48: [u8; 0x04],
    #[doc = "LPCG working status"]
    pub LPCG39_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG39_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG39_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG39_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG40_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG40_DOMAIN: crate::RWRegister<u32>,
    #[doc = "LPCG Setpoint setting"]
    pub LPCG40_SETPOINT: crate::RWRegister<u32>,
    _reserved49: [u8; 0x04],
    #[doc = "LPCG working status"]
    pub LPCG40_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG40_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG40_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG40_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG41_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG41_DOMAIN: crate::RWRegister<u32>,
    _reserved50: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG41_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG41_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG41_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG41_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG42_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG42_DOMAIN: crate::RWRegister<u32>,
    _reserved51: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG42_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG42_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG42_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG42_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG43_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG43_DOMAIN: crate::RWRegister<u32>,
    #[doc = "LPCG Setpoint setting"]
    pub LPCG43_SETPOINT: crate::RWRegister<u32>,
    _reserved52: [u8; 0x04],
    #[doc = "LPCG working status"]
    pub LPCG43_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG43_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG43_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG43_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG44_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG44_DOMAIN: crate::RWRegister<u32>,
    #[doc = "LPCG Setpoint setting"]
    pub LPCG44_SETPOINT: crate::RWRegister<u32>,
    _reserved53: [u8; 0x04],
    #[doc = "LPCG working status"]
    pub LPCG44_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG44_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG44_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG44_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG45_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG45_DOMAIN: crate::RWRegister<u32>,
    #[doc = "LPCG Setpoint setting"]
    pub LPCG45_SETPOINT: crate::RWRegister<u32>,
    _reserved54: [u8; 0x04],
    #[doc = "LPCG working status"]
    pub LPCG45_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG45_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG45_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG45_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG46_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG46_DOMAIN: crate::RWRegister<u32>,
    #[doc = "LPCG Setpoint setting"]
    pub LPCG46_SETPOINT: crate::RWRegister<u32>,
    _reserved55: [u8; 0x04],
    #[doc = "LPCG working status"]
    pub LPCG46_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG46_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG46_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG46_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG47_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG47_DOMAIN: crate::RWRegister<u32>,
    #[doc = "LPCG Setpoint setting"]
    pub LPCG47_SETPOINT: crate::RWRegister<u32>,
    _reserved56: [u8; 0x04],
    #[doc = "LPCG working status"]
    pub LPCG47_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG47_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG47_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG47_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG48_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG48_DOMAIN: crate::RWRegister<u32>,
    #[doc = "LPCG Setpoint setting"]
    pub LPCG48_SETPOINT: crate::RWRegister<u32>,
    _reserved57: [u8; 0x04],
    #[doc = "LPCG working status"]
    pub LPCG48_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG48_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG48_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG48_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG49_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG49_DOMAIN: crate::RWRegister<u32>,
    _reserved58: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG49_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG49_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG49_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG49_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG50_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG50_DOMAIN: crate::RWRegister<u32>,
    _reserved59: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG50_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG50_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG50_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG50_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG51_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG51_DOMAIN: crate::RWRegister<u32>,
    _reserved60: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG51_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG51_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG51_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG51_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG52_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG52_DOMAIN: crate::RWRegister<u32>,
    _reserved61: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG52_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG52_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG52_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG52_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG53_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG53_DOMAIN: crate::RWRegister<u32>,
    _reserved62: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG53_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG53_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG53_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG53_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG54_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG54_DOMAIN: crate::RWRegister<u32>,
    _reserved63: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG54_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG54_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG54_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG54_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG55_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG55_DOMAIN: crate::RWRegister<u32>,
    _reserved64: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG55_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG55_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG55_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG55_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG56_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG56_DOMAIN: crate::RWRegister<u32>,
    _reserved65: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG56_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG56_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG56_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG56_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG57_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG57_DOMAIN: crate::RWRegister<u32>,
    _reserved66: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG57_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG57_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG57_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG57_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG58_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG58_DOMAIN: crate::RWRegister<u32>,
    _reserved67: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG58_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG58_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG58_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG58_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG59_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG59_DOMAIN: crate::RWRegister<u32>,
    _reserved68: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG59_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG59_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG59_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG59_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG60_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG60_DOMAIN: crate::RWRegister<u32>,
    _reserved69: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG60_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG60_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG60_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG60_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG61_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG61_DOMAIN: crate::RWRegister<u32>,
    _reserved70: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG61_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG61_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG61_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG61_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG62_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG62_DOMAIN: crate::RWRegister<u32>,
    _reserved71: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG62_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG62_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG62_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG62_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG63_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG63_DOMAIN: crate::RWRegister<u32>,
    _reserved72: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG63_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG63_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG63_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG63_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG64_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG64_DOMAIN: crate::RWRegister<u32>,
    _reserved73: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG64_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG64_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG64_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG64_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG65_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG65_DOMAIN: crate::RWRegister<u32>,
    _reserved74: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG65_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG65_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG65_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG65_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG66_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG66_DOMAIN: crate::RWRegister<u32>,
    _reserved75: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG66_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG66_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG66_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG66_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG67_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG67_DOMAIN: crate::RWRegister<u32>,
    _reserved76: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG67_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG67_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG67_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG67_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG68_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG68_DOMAIN: crate::RWRegister<u32>,
    _reserved77: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG68_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG68_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG68_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG68_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG69_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG69_DOMAIN: crate::RWRegister<u32>,
    _reserved78: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG69_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG69_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG69_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG69_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG70_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG70_DOMAIN: crate::RWRegister<u32>,
    _reserved79: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG70_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG70_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG70_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG70_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG71_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG71_DOMAIN: crate::RWRegister<u32>,
    _reserved80: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG71_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG71_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG71_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG71_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG72_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG72_DOMAIN: crate::RWRegister<u32>,
    _reserved81: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG72_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG72_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG72_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG72_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG73_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG73_DOMAIN: crate::RWRegister<u32>,
    _reserved82: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG73_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG73_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG73_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG73_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG74_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG74_DOMAIN: crate::RWRegister<u32>,
    _reserved83: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG74_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG74_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG74_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG74_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG75_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG75_DOMAIN: crate::RWRegister<u32>,
    _reserved84: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG75_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG75_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG75_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG75_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG76_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG76_DOMAIN: crate::RWRegister<u32>,
    _reserved85: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG76_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG76_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG76_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG76_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG77_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG77_DOMAIN: crate::RWRegister<u32>,
    _reserved86: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG77_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG77_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG77_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG77_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG78_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG78_DOMAIN: crate::RWRegister<u32>,
    _reserved87: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG78_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG78_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG78_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG78_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG79_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG79_DOMAIN: crate::RWRegister<u32>,
    _reserved88: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG79_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG79_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG79_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG79_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG80_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG80_DOMAIN: crate::RWRegister<u32>,
    _reserved89: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG80_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG80_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG80_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG80_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG81_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG81_DOMAIN: crate::RWRegister<u32>,
    _reserved90: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG81_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG81_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG81_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG81_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG82_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG82_DOMAIN: crate::RWRegister<u32>,
    _reserved91: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG82_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG82_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG82_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG82_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG83_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG83_DOMAIN: crate::RWRegister<u32>,
    _reserved92: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG83_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG83_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG83_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG83_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG84_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG84_DOMAIN: crate::RWRegister<u32>,
    _reserved93: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG84_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG84_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG84_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG84_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG85_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG85_DOMAIN: crate::RWRegister<u32>,
    _reserved94: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG85_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG85_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG85_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG85_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG86_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG86_DOMAIN: crate::RWRegister<u32>,
    _reserved95: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG86_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG86_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG86_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG86_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG87_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG87_DOMAIN: crate::RWRegister<u32>,
    _reserved96: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG87_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG87_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG87_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG87_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG88_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG88_DOMAIN: crate::RWRegister<u32>,
    _reserved97: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG88_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG88_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG88_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG88_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG89_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG89_DOMAIN: crate::RWRegister<u32>,
    _reserved98: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG89_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG89_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG89_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG89_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG90_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG90_DOMAIN: crate::RWRegister<u32>,
    _reserved99: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG90_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG90_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG90_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG90_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG91_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG91_DOMAIN: crate::RWRegister<u32>,
    _reserved100: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG91_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG91_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG91_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG91_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG92_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG92_DOMAIN: crate::RWRegister<u32>,
    _reserved101: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG92_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG92_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG92_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG92_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG93_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG93_DOMAIN: crate::RWRegister<u32>,
    _reserved102: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG93_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG93_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG93_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG93_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG94_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG94_DOMAIN: crate::RWRegister<u32>,
    _reserved103: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG94_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG94_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG94_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG94_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG95_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG95_DOMAIN: crate::RWRegister<u32>,
    _reserved104: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG95_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG95_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG95_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG95_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG96_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG96_DOMAIN: crate::RWRegister<u32>,
    _reserved105: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG96_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG96_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG96_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG96_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG97_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG97_DOMAIN: crate::RWRegister<u32>,
    _reserved106: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG97_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG97_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG97_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG97_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG98_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG98_DOMAIN: crate::RWRegister<u32>,
    _reserved107: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG98_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG98_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG98_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG98_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG99_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG99_DOMAIN: crate::RWRegister<u32>,
    _reserved108: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG99_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG99_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG99_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG99_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG100_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG100_DOMAIN: crate::RWRegister<u32>,
    _reserved109: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG100_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG100_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG100_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG100_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG101_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG101_DOMAIN: crate::RWRegister<u32>,
    _reserved110: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG101_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG101_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG101_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG101_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG102_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG102_DOMAIN: crate::RWRegister<u32>,
    _reserved111: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG102_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG102_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG102_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG102_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG103_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG103_DOMAIN: crate::RWRegister<u32>,
    _reserved112: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG103_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG103_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG103_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG103_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG104_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG104_DOMAIN: crate::RWRegister<u32>,
    _reserved113: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG104_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG104_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG104_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG104_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG105_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG105_DOMAIN: crate::RWRegister<u32>,
    _reserved114: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG105_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG105_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG105_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG105_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG106_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG106_DOMAIN: crate::RWRegister<u32>,
    _reserved115: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG106_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG106_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG106_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG106_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG107_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG107_DOMAIN: crate::RWRegister<u32>,
    _reserved116: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG107_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG107_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG107_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG107_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG108_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG108_DOMAIN: crate::RWRegister<u32>,
    _reserved117: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG108_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG108_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG108_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG108_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG109_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG109_DOMAIN: crate::RWRegister<u32>,
    _reserved118: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG109_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG109_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG109_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG109_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG110_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG110_DOMAIN: crate::RWRegister<u32>,
    _reserved119: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG110_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG110_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG110_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG110_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG111_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG111_DOMAIN: crate::RWRegister<u32>,
    _reserved120: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG111_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG111_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG111_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG111_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG112_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG112_DOMAIN: crate::RWRegister<u32>,
    _reserved121: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG112_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG112_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG112_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG112_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG113_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG113_DOMAIN: crate::RWRegister<u32>,
    _reserved122: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG113_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG113_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG113_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG113_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG114_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG114_DOMAIN: crate::RWRegister<u32>,
    _reserved123: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG114_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG114_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG114_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG114_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG115_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG115_DOMAIN: crate::RWRegister<u32>,
    _reserved124: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG115_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG115_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG115_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG115_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG116_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG116_DOMAIN: crate::RWRegister<u32>,
    _reserved125: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG116_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG116_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG116_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG116_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG117_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG117_DOMAIN: crate::RWRegister<u32>,
    _reserved126: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG117_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG117_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG117_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG117_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG118_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG118_DOMAIN: crate::RWRegister<u32>,
    _reserved127: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG118_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG118_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG118_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG118_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG119_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG119_DOMAIN: crate::RWRegister<u32>,
    _reserved128: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG119_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG119_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG119_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG119_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG120_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG120_DOMAIN: crate::RWRegister<u32>,
    _reserved129: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG120_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG120_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG120_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG120_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG121_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG121_DOMAIN: crate::RWRegister<u32>,
    _reserved130: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG121_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG121_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG121_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG121_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG122_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG122_DOMAIN: crate::RWRegister<u32>,
    _reserved131: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG122_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG122_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG122_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG122_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG123_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG123_DOMAIN: crate::RWRegister<u32>,
    _reserved132: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG123_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG123_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG123_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG123_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG124_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG124_DOMAIN: crate::RWRegister<u32>,
    _reserved133: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG124_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG124_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG124_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG124_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG125_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG125_DOMAIN: crate::RWRegister<u32>,
    _reserved134: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG125_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG125_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG125_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG125_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG126_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG126_DOMAIN: crate::RWRegister<u32>,
    _reserved135: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG126_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG126_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG126_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG126_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG127_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG127_DOMAIN: crate::RWRegister<u32>,
    _reserved136: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG127_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG127_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG127_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG127_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG128_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG128_DOMAIN: crate::RWRegister<u32>,
    _reserved137: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG128_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG128_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG128_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG128_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG129_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG129_DOMAIN: crate::RWRegister<u32>,
    _reserved138: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG129_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG129_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG129_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG129_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG130_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG130_DOMAIN: crate::RWRegister<u32>,
    _reserved139: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG130_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG130_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG130_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG130_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG131_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG131_DOMAIN: crate::RWRegister<u32>,
    _reserved140: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG131_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG131_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG131_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG131_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG132_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG132_DOMAIN: crate::RWRegister<u32>,
    _reserved141: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG132_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG132_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG132_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG132_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG133_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG133_DOMAIN: crate::RWRegister<u32>,
    _reserved142: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG133_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG133_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG133_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG133_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG134_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG134_DOMAIN: crate::RWRegister<u32>,
    _reserved143: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG134_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG134_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG134_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG134_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG135_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG135_DOMAIN: crate::RWRegister<u32>,
    _reserved144: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG135_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG135_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG135_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG135_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG136_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG136_DOMAIN: crate::RWRegister<u32>,
    _reserved145: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG136_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG136_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG136_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG136_AUTHEN: crate::RWRegister<u32>,
    #[doc = "LPCG direct control"]
    pub LPCG137_DIRECT: crate::RWRegister<u32>,
    #[doc = "LPCG domain control"]
    pub LPCG137_DOMAIN: crate::RWRegister<u32>,
    _reserved146: [u8; 0x08],
    #[doc = "LPCG working status"]
    pub LPCG137_STATUS0: crate::RORegister<u32>,
    #[doc = "LPCG low power status"]
    pub LPCG137_STATUS1: crate::RORegister<u32>,
    #[doc = "LPCG configuration"]
    pub LPCG137_CONFIG: crate::RORegister<u32>,
    #[doc = "LPCG access control"]
    pub LPCG137_AUTHEN: crate::RWRegister<u32>,
}
#[doc = "Clock group control"]
pub mod CLOCK_GROUP0_CONTROL {
    #[doc = "Clock divider0"]
    pub mod DIV0 {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock group global restart count"]
    pub mod RSTDIV {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "OFF"]
    pub mod OFF {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is running"]
            pub const OFF_0: u32 = 0;
            #[doc = "Turn off clock"]
            pub const OFF_1: u32 = 0x01;
        }
    }
}
#[doc = "Clock group control"]
pub mod CLOCK_GROUP0_CONTROL_SET {
    #[doc = "Clock divider0"]
    pub mod DIV0 {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock group global restart count"]
    pub mod RSTDIV {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "OFF"]
    pub mod OFF {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "Clock group control"]
pub mod CLOCK_GROUP0_CONTROL_CLR {
    #[doc = "Clock divider0"]
    pub mod DIV0 {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock group global restart count"]
    pub mod RSTDIV {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "OFF"]
    pub mod OFF {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "Clock group control"]
pub mod CLOCK_GROUP0_CONTROL_TOG {
    #[doc = "Clock divider0"]
    pub mod DIV0 {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock group global restart count"]
    pub mod RSTDIV {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "OFF"]
    pub mod OFF {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "Clock group working status"]
pub mod CLOCK_GROUP0_STATUS0 {
    #[doc = "Clock divider"]
    pub mod DIV0 {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock divider"]
    pub mod RSTDIV {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "OFF"]
    pub mod OFF {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is running."]
            pub const OFF_0: u32 = 0;
            #[doc = "Turn off clock."]
            pub const OFF_1: u32 = 0x01;
        }
    }
    #[doc = "Current clock root POWERDOWN setting"]
    pub mod POWERDOWN {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock root is running"]
            pub const RUN: u32 = 0;
            #[doc = "Clock root is Powered Down"]
            pub const PWRDWN: u32 = 0x01;
        }
    }
    #[doc = "Internal updating in generation logic"]
    pub mod SLICE_BUSY {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock generation logic is not busy"]
            pub const DIS: u32 = 0;
            #[doc = "Clock generation logic is applying the new setting"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Internal status synchronization to clock generation logic"]
    pub mod UPDATE_FORWARD {
        pub const offset: u32 = 29;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Synchronization not in process"]
            pub const DIS: u32 = 0;
            #[doc = "Synchronization in process"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Internal status synchronization from clock generation logic"]
    pub mod UPDATE_REVERSE {
        pub const offset: u32 = 30;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Synchronization not in process"]
            pub const DIS: u32 = 0;
            #[doc = "Synchronization in process"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Internal updating in clock group"]
    pub mod CHANGING {
        pub const offset: u32 = 31;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock root is not updating currently"]
            pub const DIS: u32 = 0;
            #[doc = "Clock root logic is updating currently"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "Clock group low power/extend status"]
pub mod CLOCK_GROUP0_STATUS1 {
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock frequency decrease request"]
    pub mod DOWN_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No handshake signal is not requested"]
            pub const NOTREQ: u32 = 0;
            #[doc = "Handshake signal with GPC status indicating frequency decrease is requested"]
            pub const REQUEST: u32 = 0x01;
        }
    }
    #[doc = "Clock frequency decrease complete"]
    pub mod DOWN_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Handshake signal with GPC status indicating frequency decrease is not complete"]
            pub const DISABLE: u32 = 0;
            #[doc = "Handshake signal with GPC status indicating frequency decrease is complete"]
            pub const COMPL: u32 = 0x01;
        }
    }
    #[doc = "Clock frequency increase request"]
    pub mod UP_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No handshake signal is not requested"]
            pub const NOTREQ: u32 = 0;
            #[doc = "Handshake signal with GPC status indicating frequency increase is requested"]
            pub const REQUEST: u32 = 0x01;
        }
    }
    #[doc = "Clock frequency increase complete"]
    pub mod UP_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Handshake signal with GPC status indicating frequency increase is not complete"]
            pub const DISABLE: u32 = 0;
            #[doc = "Handshake signal with GPC status indicating frequency increase is complete"]
            pub const COMPL: u32 = 0x01;
        }
    }
}
#[doc = "Clock group configuration"]
pub mod CLOCK_GROUP0_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "Clock group access control"]
pub mod CLOCK_GROUP0_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "Clock can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "Lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode."]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode."]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "Clock group access control"]
pub mod CLOCK_GROUP0_AUTHEN_SET {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "Clock group access control"]
pub mod CLOCK_GROUP0_AUTHEN_CLR {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "Clock group access control"]
pub mod CLOCK_GROUP0_AUTHEN_TOG {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "Setpoint setting"]
pub mod CLOCK_GROUP0_SETPOINT0 {
    #[doc = "Clock divider"]
    pub mod DIV0 {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Direct output."]
            pub const DIV0_0: u32 = 0;
            #[doc = "Divide by 2."]
            pub const DIV0_1: u32 = 0x01;
            #[doc = "Divide by 3."]
            pub const DIV0_2: u32 = 0x02;
            #[doc = "Divide by 4."]
            pub const DIV0_3: u32 = 0x03;
            #[doc = "Divide by 16."]
            pub const DIV0_15: u32 = 0x0f;
        }
    }
    #[doc = "Clock group global restart count"]
    pub mod RSTDIV {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "OFF"]
    pub mod OFF {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is running."]
            pub const OFF_0: u32 = 0;
            #[doc = "Turn off clock."]
            pub const OFF_1: u32 = 0x01;
        }
    }
    #[doc = "Grade"]
    pub mod GRADE {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "Setpoint setting"]
pub mod CLOCK_GROUP0_SETPOINT1 {
    #[doc = "Clock divider"]
    pub mod DIV0 {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Direct output."]
            pub const DIV0_0: u32 = 0;
            #[doc = "Divide by 2."]
            pub const DIV0_1: u32 = 0x01;
            #[doc = "Divide by 3."]
            pub const DIV0_2: u32 = 0x02;
            #[doc = "Divide by 4."]
            pub const DIV0_3: u32 = 0x03;
            #[doc = "Divide by 16."]
            pub const DIV0_15: u32 = 0x0f;
        }
    }
    #[doc = "Clock group global restart count"]
    pub mod RSTDIV {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "OFF"]
    pub mod OFF {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is running."]
            pub const OFF_0: u32 = 0;
            #[doc = "Turn off clock."]
            pub const OFF_1: u32 = 0x01;
        }
    }
    #[doc = "Grade"]
    pub mod GRADE {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "Setpoint setting"]
pub mod CLOCK_GROUP0_SETPOINT2 {
    #[doc = "Clock divider"]
    pub mod DIV0 {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Direct output."]
            pub const DIV0_0: u32 = 0;
            #[doc = "Divide by 2."]
            pub const DIV0_1: u32 = 0x01;
            #[doc = "Divide by 3."]
            pub const DIV0_2: u32 = 0x02;
            #[doc = "Divide by 4."]
            pub const DIV0_3: u32 = 0x03;
            #[doc = "Divide by 16."]
            pub const DIV0_15: u32 = 0x0f;
        }
    }
    #[doc = "Clock group global restart count"]
    pub mod RSTDIV {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "OFF"]
    pub mod OFF {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is running."]
            pub const OFF_0: u32 = 0;
            #[doc = "Turn off clock."]
            pub const OFF_1: u32 = 0x01;
        }
    }
    #[doc = "Grade"]
    pub mod GRADE {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "Setpoint setting"]
pub mod CLOCK_GROUP0_SETPOINT3 {
    #[doc = "Clock divider"]
    pub mod DIV0 {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Direct output."]
            pub const DIV0_0: u32 = 0;
            #[doc = "Divide by 2."]
            pub const DIV0_1: u32 = 0x01;
            #[doc = "Divide by 3."]
            pub const DIV0_2: u32 = 0x02;
            #[doc = "Divide by 4."]
            pub const DIV0_3: u32 = 0x03;
            #[doc = "Divide by 16."]
            pub const DIV0_15: u32 = 0x0f;
        }
    }
    #[doc = "Clock group global restart count"]
    pub mod RSTDIV {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "OFF"]
    pub mod OFF {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is running."]
            pub const OFF_0: u32 = 0;
            #[doc = "Turn off clock."]
            pub const OFF_1: u32 = 0x01;
        }
    }
    #[doc = "Grade"]
    pub mod GRADE {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "Setpoint setting"]
pub mod CLOCK_GROUP0_SETPOINT4 {
    #[doc = "Clock divider"]
    pub mod DIV0 {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Direct output."]
            pub const DIV0_0: u32 = 0;
            #[doc = "Divide by 2."]
            pub const DIV0_1: u32 = 0x01;
            #[doc = "Divide by 3."]
            pub const DIV0_2: u32 = 0x02;
            #[doc = "Divide by 4."]
            pub const DIV0_3: u32 = 0x03;
            #[doc = "Divide by 16."]
            pub const DIV0_15: u32 = 0x0f;
        }
    }
    #[doc = "Clock group global restart count"]
    pub mod RSTDIV {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "OFF"]
    pub mod OFF {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is running."]
            pub const OFF_0: u32 = 0;
            #[doc = "Turn off clock."]
            pub const OFF_1: u32 = 0x01;
        }
    }
    #[doc = "Grade"]
    pub mod GRADE {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "Setpoint setting"]
pub mod CLOCK_GROUP0_SETPOINT5 {
    #[doc = "Clock divider"]
    pub mod DIV0 {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Direct output."]
            pub const DIV0_0: u32 = 0;
            #[doc = "Divide by 2."]
            pub const DIV0_1: u32 = 0x01;
            #[doc = "Divide by 3."]
            pub const DIV0_2: u32 = 0x02;
            #[doc = "Divide by 4."]
            pub const DIV0_3: u32 = 0x03;
            #[doc = "Divide by 16."]
            pub const DIV0_15: u32 = 0x0f;
        }
    }
    #[doc = "Clock group global restart count"]
    pub mod RSTDIV {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "OFF"]
    pub mod OFF {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is running."]
            pub const OFF_0: u32 = 0;
            #[doc = "Turn off clock."]
            pub const OFF_1: u32 = 0x01;
        }
    }
    #[doc = "Grade"]
    pub mod GRADE {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "Setpoint setting"]
pub mod CLOCK_GROUP0_SETPOINT6 {
    #[doc = "Clock divider"]
    pub mod DIV0 {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Direct output."]
            pub const DIV0_0: u32 = 0;
            #[doc = "Divide by 2."]
            pub const DIV0_1: u32 = 0x01;
            #[doc = "Divide by 3."]
            pub const DIV0_2: u32 = 0x02;
            #[doc = "Divide by 4."]
            pub const DIV0_3: u32 = 0x03;
            #[doc = "Divide by 16."]
            pub const DIV0_15: u32 = 0x0f;
        }
    }
    #[doc = "Clock group global restart count"]
    pub mod RSTDIV {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "OFF"]
    pub mod OFF {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is running."]
            pub const OFF_0: u32 = 0;
            #[doc = "Turn off clock."]
            pub const OFF_1: u32 = 0x01;
        }
    }
    #[doc = "Grade"]
    pub mod GRADE {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "Setpoint setting"]
pub mod CLOCK_GROUP0_SETPOINT7 {
    #[doc = "Clock divider"]
    pub mod DIV0 {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Direct output."]
            pub const DIV0_0: u32 = 0;
            #[doc = "Divide by 2."]
            pub const DIV0_1: u32 = 0x01;
            #[doc = "Divide by 3."]
            pub const DIV0_2: u32 = 0x02;
            #[doc = "Divide by 4."]
            pub const DIV0_3: u32 = 0x03;
            #[doc = "Divide by 16."]
            pub const DIV0_15: u32 = 0x0f;
        }
    }
    #[doc = "Clock group global restart count"]
    pub mod RSTDIV {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "OFF"]
    pub mod OFF {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is running."]
            pub const OFF_0: u32 = 0;
            #[doc = "Turn off clock."]
            pub const OFF_1: u32 = 0x01;
        }
    }
    #[doc = "Grade"]
    pub mod GRADE {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "Setpoint setting"]
pub mod CLOCK_GROUP0_SETPOINT8 {
    #[doc = "Clock divider"]
    pub mod DIV0 {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Direct output."]
            pub const DIV0_0: u32 = 0;
            #[doc = "Divide by 2."]
            pub const DIV0_1: u32 = 0x01;
            #[doc = "Divide by 3."]
            pub const DIV0_2: u32 = 0x02;
            #[doc = "Divide by 4."]
            pub const DIV0_3: u32 = 0x03;
            #[doc = "Divide by 16."]
            pub const DIV0_15: u32 = 0x0f;
        }
    }
    #[doc = "Clock group global restart count"]
    pub mod RSTDIV {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "OFF"]
    pub mod OFF {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is running."]
            pub const OFF_0: u32 = 0;
            #[doc = "Turn off clock."]
            pub const OFF_1: u32 = 0x01;
        }
    }
    #[doc = "Grade"]
    pub mod GRADE {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "Setpoint setting"]
pub mod CLOCK_GROUP0_SETPOINT9 {
    #[doc = "Clock divider"]
    pub mod DIV0 {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Direct output."]
            pub const DIV0_0: u32 = 0;
            #[doc = "Divide by 2."]
            pub const DIV0_1: u32 = 0x01;
            #[doc = "Divide by 3."]
            pub const DIV0_2: u32 = 0x02;
            #[doc = "Divide by 4."]
            pub const DIV0_3: u32 = 0x03;
            #[doc = "Divide by 16."]
            pub const DIV0_15: u32 = 0x0f;
        }
    }
    #[doc = "Clock group global restart count"]
    pub mod RSTDIV {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "OFF"]
    pub mod OFF {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is running."]
            pub const OFF_0: u32 = 0;
            #[doc = "Turn off clock."]
            pub const OFF_1: u32 = 0x01;
        }
    }
    #[doc = "Grade"]
    pub mod GRADE {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "Setpoint setting"]
pub mod CLOCK_GROUP0_SETPOINT10 {
    #[doc = "Clock divider"]
    pub mod DIV0 {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Direct output."]
            pub const DIV0_0: u32 = 0;
            #[doc = "Divide by 2."]
            pub const DIV0_1: u32 = 0x01;
            #[doc = "Divide by 3."]
            pub const DIV0_2: u32 = 0x02;
            #[doc = "Divide by 4."]
            pub const DIV0_3: u32 = 0x03;
            #[doc = "Divide by 16."]
            pub const DIV0_15: u32 = 0x0f;
        }
    }
    #[doc = "Clock group global restart count"]
    pub mod RSTDIV {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "OFF"]
    pub mod OFF {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is running."]
            pub const OFF_0: u32 = 0;
            #[doc = "Turn off clock."]
            pub const OFF_1: u32 = 0x01;
        }
    }
    #[doc = "Grade"]
    pub mod GRADE {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "Setpoint setting"]
pub mod CLOCK_GROUP0_SETPOINT11 {
    #[doc = "Clock divider"]
    pub mod DIV0 {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Direct output."]
            pub const DIV0_0: u32 = 0;
            #[doc = "Divide by 2."]
            pub const DIV0_1: u32 = 0x01;
            #[doc = "Divide by 3."]
            pub const DIV0_2: u32 = 0x02;
            #[doc = "Divide by 4."]
            pub const DIV0_3: u32 = 0x03;
            #[doc = "Divide by 16."]
            pub const DIV0_15: u32 = 0x0f;
        }
    }
    #[doc = "Clock group global restart count"]
    pub mod RSTDIV {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "OFF"]
    pub mod OFF {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is running."]
            pub const OFF_0: u32 = 0;
            #[doc = "Turn off clock."]
            pub const OFF_1: u32 = 0x01;
        }
    }
    #[doc = "Grade"]
    pub mod GRADE {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "Setpoint setting"]
pub mod CLOCK_GROUP0_SETPOINT12 {
    #[doc = "Clock divider"]
    pub mod DIV0 {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Direct output."]
            pub const DIV0_0: u32 = 0;
            #[doc = "Divide by 2."]
            pub const DIV0_1: u32 = 0x01;
            #[doc = "Divide by 3."]
            pub const DIV0_2: u32 = 0x02;
            #[doc = "Divide by 4."]
            pub const DIV0_3: u32 = 0x03;
            #[doc = "Divide by 16."]
            pub const DIV0_15: u32 = 0x0f;
        }
    }
    #[doc = "Clock group global restart count"]
    pub mod RSTDIV {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "OFF"]
    pub mod OFF {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is running."]
            pub const OFF_0: u32 = 0;
            #[doc = "Turn off clock."]
            pub const OFF_1: u32 = 0x01;
        }
    }
    #[doc = "Grade"]
    pub mod GRADE {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "Setpoint setting"]
pub mod CLOCK_GROUP0_SETPOINT13 {
    #[doc = "Clock divider"]
    pub mod DIV0 {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Direct output."]
            pub const DIV0_0: u32 = 0;
            #[doc = "Divide by 2."]
            pub const DIV0_1: u32 = 0x01;
            #[doc = "Divide by 3."]
            pub const DIV0_2: u32 = 0x02;
            #[doc = "Divide by 4."]
            pub const DIV0_3: u32 = 0x03;
            #[doc = "Divide by 16."]
            pub const DIV0_15: u32 = 0x0f;
        }
    }
    #[doc = "Clock group global restart count"]
    pub mod RSTDIV {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "OFF"]
    pub mod OFF {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is running."]
            pub const OFF_0: u32 = 0;
            #[doc = "Turn off clock."]
            pub const OFF_1: u32 = 0x01;
        }
    }
    #[doc = "Grade"]
    pub mod GRADE {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "Setpoint setting"]
pub mod CLOCK_GROUP0_SETPOINT14 {
    #[doc = "Clock divider"]
    pub mod DIV0 {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Direct output."]
            pub const DIV0_0: u32 = 0;
            #[doc = "Divide by 2."]
            pub const DIV0_1: u32 = 0x01;
            #[doc = "Divide by 3."]
            pub const DIV0_2: u32 = 0x02;
            #[doc = "Divide by 4."]
            pub const DIV0_3: u32 = 0x03;
            #[doc = "Divide by 16."]
            pub const DIV0_15: u32 = 0x0f;
        }
    }
    #[doc = "Clock group global restart count"]
    pub mod RSTDIV {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "OFF"]
    pub mod OFF {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is running."]
            pub const OFF_0: u32 = 0;
            #[doc = "Turn off clock."]
            pub const OFF_1: u32 = 0x01;
        }
    }
    #[doc = "Grade"]
    pub mod GRADE {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "Setpoint setting"]
pub mod CLOCK_GROUP0_SETPOINT15 {
    #[doc = "Clock divider"]
    pub mod DIV0 {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Direct output."]
            pub const DIV0_0: u32 = 0;
            #[doc = "Divide by 2."]
            pub const DIV0_1: u32 = 0x01;
            #[doc = "Divide by 3."]
            pub const DIV0_2: u32 = 0x02;
            #[doc = "Divide by 4."]
            pub const DIV0_3: u32 = 0x03;
            #[doc = "Divide by 16."]
            pub const DIV0_15: u32 = 0x0f;
        }
    }
    #[doc = "Clock group global restart count"]
    pub mod RSTDIV {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "OFF"]
    pub mod OFF {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is running."]
            pub const OFF_0: u32 = 0;
            #[doc = "Turn off clock."]
            pub const OFF_1: u32 = 0x01;
        }
    }
    #[doc = "Grade"]
    pub mod GRADE {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "Clock group control"]
pub mod CLOCK_GROUP1_CONTROL {
    #[doc = "Clock divider0"]
    pub mod DIV0 {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock group global restart count"]
    pub mod RSTDIV {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "OFF"]
    pub mod OFF {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is running"]
            pub const OFF_0: u32 = 0;
            #[doc = "Turn off clock"]
            pub const OFF_1: u32 = 0x01;
        }
    }
}
#[doc = "Clock group control"]
pub mod CLOCK_GROUP1_CONTROL_SET {
    #[doc = "Clock divider0"]
    pub mod DIV0 {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock group global restart count"]
    pub mod RSTDIV {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "OFF"]
    pub mod OFF {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "Clock group control"]
pub mod CLOCK_GROUP1_CONTROL_CLR {
    #[doc = "Clock divider0"]
    pub mod DIV0 {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock group global restart count"]
    pub mod RSTDIV {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "OFF"]
    pub mod OFF {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "Clock group control"]
pub mod CLOCK_GROUP1_CONTROL_TOG {
    #[doc = "Clock divider0"]
    pub mod DIV0 {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock group global restart count"]
    pub mod RSTDIV {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "OFF"]
    pub mod OFF {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "Clock group working status"]
pub mod CLOCK_GROUP1_STATUS0 {
    #[doc = "Clock divider"]
    pub mod DIV0 {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock divider"]
    pub mod RSTDIV {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "OFF"]
    pub mod OFF {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is running."]
            pub const OFF_0: u32 = 0;
            #[doc = "Turn off clock."]
            pub const OFF_1: u32 = 0x01;
        }
    }
    #[doc = "Current clock root POWERDOWN setting"]
    pub mod POWERDOWN {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock root is running"]
            pub const RUN: u32 = 0;
            #[doc = "Clock root is Powered Down"]
            pub const PWRDWN: u32 = 0x01;
        }
    }
    #[doc = "Internal updating in generation logic"]
    pub mod SLICE_BUSY {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock generation logic is not busy"]
            pub const DIS: u32 = 0;
            #[doc = "Clock generation logic is applying the new setting"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Internal status synchronization to clock generation logic"]
    pub mod UPDATE_FORWARD {
        pub const offset: u32 = 29;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Synchronization not in process"]
            pub const DIS: u32 = 0;
            #[doc = "Synchronization in process"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Internal status synchronization from clock generation logic"]
    pub mod UPDATE_REVERSE {
        pub const offset: u32 = 30;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Synchronization not in process"]
            pub const DIS: u32 = 0;
            #[doc = "Synchronization in process"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Internal updating in clock group"]
    pub mod CHANGING {
        pub const offset: u32 = 31;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock root is not updating currently"]
            pub const DIS: u32 = 0;
            #[doc = "Clock root logic is updating currently"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "Clock group low power/extend status"]
pub mod CLOCK_GROUP1_STATUS1 {
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock frequency decrease request"]
    pub mod DOWN_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No handshake signal is not requested"]
            pub const NOTREQ: u32 = 0;
            #[doc = "Handshake signal with GPC status indicating frequency decrease is requested"]
            pub const REQUEST: u32 = 0x01;
        }
    }
    #[doc = "Clock frequency decrease complete"]
    pub mod DOWN_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Handshake signal with GPC status indicating frequency decrease is not complete"]
            pub const DISABLE: u32 = 0;
            #[doc = "Handshake signal with GPC status indicating frequency decrease is complete"]
            pub const COMPL: u32 = 0x01;
        }
    }
    #[doc = "Clock frequency increase request"]
    pub mod UP_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No handshake signal is not requested"]
            pub const NOTREQ: u32 = 0;
            #[doc = "Handshake signal with GPC status indicating frequency increase is requested"]
            pub const REQUEST: u32 = 0x01;
        }
    }
    #[doc = "Clock frequency increase complete"]
    pub mod UP_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Handshake signal with GPC status indicating frequency increase is not complete"]
            pub const DISABLE: u32 = 0;
            #[doc = "Handshake signal with GPC status indicating frequency increase is complete"]
            pub const COMPL: u32 = 0x01;
        }
    }
}
#[doc = "Clock group configuration"]
pub mod CLOCK_GROUP1_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "Clock group access control"]
pub mod CLOCK_GROUP1_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "Clock can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "Lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode."]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode."]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "Clock group access control"]
pub mod CLOCK_GROUP1_AUTHEN_SET {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "Clock group access control"]
pub mod CLOCK_GROUP1_AUTHEN_CLR {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "Clock group access control"]
pub mod CLOCK_GROUP1_AUTHEN_TOG {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "Setpoint setting"]
pub mod CLOCK_GROUP1_SETPOINT0 {
    #[doc = "Clock divider"]
    pub mod DIV0 {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Direct output."]
            pub const DIV0_0: u32 = 0;
            #[doc = "Divide by 2."]
            pub const DIV0_1: u32 = 0x01;
            #[doc = "Divide by 3."]
            pub const DIV0_2: u32 = 0x02;
            #[doc = "Divide by 4."]
            pub const DIV0_3: u32 = 0x03;
            #[doc = "Divide by 16."]
            pub const DIV0_15: u32 = 0x0f;
        }
    }
    #[doc = "Clock group global restart count"]
    pub mod RSTDIV {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "OFF"]
    pub mod OFF {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is running."]
            pub const OFF_0: u32 = 0;
            #[doc = "Turn off clock."]
            pub const OFF_1: u32 = 0x01;
        }
    }
    #[doc = "Grade"]
    pub mod GRADE {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "Setpoint setting"]
pub mod CLOCK_GROUP1_SETPOINT1 {
    #[doc = "Clock divider"]
    pub mod DIV0 {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Direct output."]
            pub const DIV0_0: u32 = 0;
            #[doc = "Divide by 2."]
            pub const DIV0_1: u32 = 0x01;
            #[doc = "Divide by 3."]
            pub const DIV0_2: u32 = 0x02;
            #[doc = "Divide by 4."]
            pub const DIV0_3: u32 = 0x03;
            #[doc = "Divide by 16."]
            pub const DIV0_15: u32 = 0x0f;
        }
    }
    #[doc = "Clock group global restart count"]
    pub mod RSTDIV {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "OFF"]
    pub mod OFF {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is running."]
            pub const OFF_0: u32 = 0;
            #[doc = "Turn off clock."]
            pub const OFF_1: u32 = 0x01;
        }
    }
    #[doc = "Grade"]
    pub mod GRADE {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "Setpoint setting"]
pub mod CLOCK_GROUP1_SETPOINT2 {
    #[doc = "Clock divider"]
    pub mod DIV0 {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Direct output."]
            pub const DIV0_0: u32 = 0;
            #[doc = "Divide by 2."]
            pub const DIV0_1: u32 = 0x01;
            #[doc = "Divide by 3."]
            pub const DIV0_2: u32 = 0x02;
            #[doc = "Divide by 4."]
            pub const DIV0_3: u32 = 0x03;
            #[doc = "Divide by 16."]
            pub const DIV0_15: u32 = 0x0f;
        }
    }
    #[doc = "Clock group global restart count"]
    pub mod RSTDIV {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "OFF"]
    pub mod OFF {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is running."]
            pub const OFF_0: u32 = 0;
            #[doc = "Turn off clock."]
            pub const OFF_1: u32 = 0x01;
        }
    }
    #[doc = "Grade"]
    pub mod GRADE {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "Setpoint setting"]
pub mod CLOCK_GROUP1_SETPOINT3 {
    #[doc = "Clock divider"]
    pub mod DIV0 {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Direct output."]
            pub const DIV0_0: u32 = 0;
            #[doc = "Divide by 2."]
            pub const DIV0_1: u32 = 0x01;
            #[doc = "Divide by 3."]
            pub const DIV0_2: u32 = 0x02;
            #[doc = "Divide by 4."]
            pub const DIV0_3: u32 = 0x03;
            #[doc = "Divide by 16."]
            pub const DIV0_15: u32 = 0x0f;
        }
    }
    #[doc = "Clock group global restart count"]
    pub mod RSTDIV {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "OFF"]
    pub mod OFF {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is running."]
            pub const OFF_0: u32 = 0;
            #[doc = "Turn off clock."]
            pub const OFF_1: u32 = 0x01;
        }
    }
    #[doc = "Grade"]
    pub mod GRADE {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "Setpoint setting"]
pub mod CLOCK_GROUP1_SETPOINT4 {
    #[doc = "Clock divider"]
    pub mod DIV0 {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Direct output."]
            pub const DIV0_0: u32 = 0;
            #[doc = "Divide by 2."]
            pub const DIV0_1: u32 = 0x01;
            #[doc = "Divide by 3."]
            pub const DIV0_2: u32 = 0x02;
            #[doc = "Divide by 4."]
            pub const DIV0_3: u32 = 0x03;
            #[doc = "Divide by 16."]
            pub const DIV0_15: u32 = 0x0f;
        }
    }
    #[doc = "Clock group global restart count"]
    pub mod RSTDIV {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "OFF"]
    pub mod OFF {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is running."]
            pub const OFF_0: u32 = 0;
            #[doc = "Turn off clock."]
            pub const OFF_1: u32 = 0x01;
        }
    }
    #[doc = "Grade"]
    pub mod GRADE {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "Setpoint setting"]
pub mod CLOCK_GROUP1_SETPOINT5 {
    #[doc = "Clock divider"]
    pub mod DIV0 {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Direct output."]
            pub const DIV0_0: u32 = 0;
            #[doc = "Divide by 2."]
            pub const DIV0_1: u32 = 0x01;
            #[doc = "Divide by 3."]
            pub const DIV0_2: u32 = 0x02;
            #[doc = "Divide by 4."]
            pub const DIV0_3: u32 = 0x03;
            #[doc = "Divide by 16."]
            pub const DIV0_15: u32 = 0x0f;
        }
    }
    #[doc = "Clock group global restart count"]
    pub mod RSTDIV {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "OFF"]
    pub mod OFF {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is running."]
            pub const OFF_0: u32 = 0;
            #[doc = "Turn off clock."]
            pub const OFF_1: u32 = 0x01;
        }
    }
    #[doc = "Grade"]
    pub mod GRADE {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "Setpoint setting"]
pub mod CLOCK_GROUP1_SETPOINT6 {
    #[doc = "Clock divider"]
    pub mod DIV0 {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Direct output."]
            pub const DIV0_0: u32 = 0;
            #[doc = "Divide by 2."]
            pub const DIV0_1: u32 = 0x01;
            #[doc = "Divide by 3."]
            pub const DIV0_2: u32 = 0x02;
            #[doc = "Divide by 4."]
            pub const DIV0_3: u32 = 0x03;
            #[doc = "Divide by 16."]
            pub const DIV0_15: u32 = 0x0f;
        }
    }
    #[doc = "Clock group global restart count"]
    pub mod RSTDIV {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "OFF"]
    pub mod OFF {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is running."]
            pub const OFF_0: u32 = 0;
            #[doc = "Turn off clock."]
            pub const OFF_1: u32 = 0x01;
        }
    }
    #[doc = "Grade"]
    pub mod GRADE {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "Setpoint setting"]
pub mod CLOCK_GROUP1_SETPOINT7 {
    #[doc = "Clock divider"]
    pub mod DIV0 {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Direct output."]
            pub const DIV0_0: u32 = 0;
            #[doc = "Divide by 2."]
            pub const DIV0_1: u32 = 0x01;
            #[doc = "Divide by 3."]
            pub const DIV0_2: u32 = 0x02;
            #[doc = "Divide by 4."]
            pub const DIV0_3: u32 = 0x03;
            #[doc = "Divide by 16."]
            pub const DIV0_15: u32 = 0x0f;
        }
    }
    #[doc = "Clock group global restart count"]
    pub mod RSTDIV {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "OFF"]
    pub mod OFF {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is running."]
            pub const OFF_0: u32 = 0;
            #[doc = "Turn off clock."]
            pub const OFF_1: u32 = 0x01;
        }
    }
    #[doc = "Grade"]
    pub mod GRADE {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "Setpoint setting"]
pub mod CLOCK_GROUP1_SETPOINT8 {
    #[doc = "Clock divider"]
    pub mod DIV0 {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Direct output."]
            pub const DIV0_0: u32 = 0;
            #[doc = "Divide by 2."]
            pub const DIV0_1: u32 = 0x01;
            #[doc = "Divide by 3."]
            pub const DIV0_2: u32 = 0x02;
            #[doc = "Divide by 4."]
            pub const DIV0_3: u32 = 0x03;
            #[doc = "Divide by 16."]
            pub const DIV0_15: u32 = 0x0f;
        }
    }
    #[doc = "Clock group global restart count"]
    pub mod RSTDIV {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "OFF"]
    pub mod OFF {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is running."]
            pub const OFF_0: u32 = 0;
            #[doc = "Turn off clock."]
            pub const OFF_1: u32 = 0x01;
        }
    }
    #[doc = "Grade"]
    pub mod GRADE {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "Setpoint setting"]
pub mod CLOCK_GROUP1_SETPOINT9 {
    #[doc = "Clock divider"]
    pub mod DIV0 {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Direct output."]
            pub const DIV0_0: u32 = 0;
            #[doc = "Divide by 2."]
            pub const DIV0_1: u32 = 0x01;
            #[doc = "Divide by 3."]
            pub const DIV0_2: u32 = 0x02;
            #[doc = "Divide by 4."]
            pub const DIV0_3: u32 = 0x03;
            #[doc = "Divide by 16."]
            pub const DIV0_15: u32 = 0x0f;
        }
    }
    #[doc = "Clock group global restart count"]
    pub mod RSTDIV {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "OFF"]
    pub mod OFF {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is running."]
            pub const OFF_0: u32 = 0;
            #[doc = "Turn off clock."]
            pub const OFF_1: u32 = 0x01;
        }
    }
    #[doc = "Grade"]
    pub mod GRADE {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "Setpoint setting"]
pub mod CLOCK_GROUP1_SETPOINT10 {
    #[doc = "Clock divider"]
    pub mod DIV0 {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Direct output."]
            pub const DIV0_0: u32 = 0;
            #[doc = "Divide by 2."]
            pub const DIV0_1: u32 = 0x01;
            #[doc = "Divide by 3."]
            pub const DIV0_2: u32 = 0x02;
            #[doc = "Divide by 4."]
            pub const DIV0_3: u32 = 0x03;
            #[doc = "Divide by 16."]
            pub const DIV0_15: u32 = 0x0f;
        }
    }
    #[doc = "Clock group global restart count"]
    pub mod RSTDIV {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "OFF"]
    pub mod OFF {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is running."]
            pub const OFF_0: u32 = 0;
            #[doc = "Turn off clock."]
            pub const OFF_1: u32 = 0x01;
        }
    }
    #[doc = "Grade"]
    pub mod GRADE {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "Setpoint setting"]
pub mod CLOCK_GROUP1_SETPOINT11 {
    #[doc = "Clock divider"]
    pub mod DIV0 {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Direct output."]
            pub const DIV0_0: u32 = 0;
            #[doc = "Divide by 2."]
            pub const DIV0_1: u32 = 0x01;
            #[doc = "Divide by 3."]
            pub const DIV0_2: u32 = 0x02;
            #[doc = "Divide by 4."]
            pub const DIV0_3: u32 = 0x03;
            #[doc = "Divide by 16."]
            pub const DIV0_15: u32 = 0x0f;
        }
    }
    #[doc = "Clock group global restart count"]
    pub mod RSTDIV {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "OFF"]
    pub mod OFF {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is running."]
            pub const OFF_0: u32 = 0;
            #[doc = "Turn off clock."]
            pub const OFF_1: u32 = 0x01;
        }
    }
    #[doc = "Grade"]
    pub mod GRADE {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "Setpoint setting"]
pub mod CLOCK_GROUP1_SETPOINT12 {
    #[doc = "Clock divider"]
    pub mod DIV0 {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Direct output."]
            pub const DIV0_0: u32 = 0;
            #[doc = "Divide by 2."]
            pub const DIV0_1: u32 = 0x01;
            #[doc = "Divide by 3."]
            pub const DIV0_2: u32 = 0x02;
            #[doc = "Divide by 4."]
            pub const DIV0_3: u32 = 0x03;
            #[doc = "Divide by 16."]
            pub const DIV0_15: u32 = 0x0f;
        }
    }
    #[doc = "Clock group global restart count"]
    pub mod RSTDIV {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "OFF"]
    pub mod OFF {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is running."]
            pub const OFF_0: u32 = 0;
            #[doc = "Turn off clock."]
            pub const OFF_1: u32 = 0x01;
        }
    }
    #[doc = "Grade"]
    pub mod GRADE {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "Setpoint setting"]
pub mod CLOCK_GROUP1_SETPOINT13 {
    #[doc = "Clock divider"]
    pub mod DIV0 {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Direct output."]
            pub const DIV0_0: u32 = 0;
            #[doc = "Divide by 2."]
            pub const DIV0_1: u32 = 0x01;
            #[doc = "Divide by 3."]
            pub const DIV0_2: u32 = 0x02;
            #[doc = "Divide by 4."]
            pub const DIV0_3: u32 = 0x03;
            #[doc = "Divide by 16."]
            pub const DIV0_15: u32 = 0x0f;
        }
    }
    #[doc = "Clock group global restart count"]
    pub mod RSTDIV {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "OFF"]
    pub mod OFF {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is running."]
            pub const OFF_0: u32 = 0;
            #[doc = "Turn off clock."]
            pub const OFF_1: u32 = 0x01;
        }
    }
    #[doc = "Grade"]
    pub mod GRADE {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "Setpoint setting"]
pub mod CLOCK_GROUP1_SETPOINT14 {
    #[doc = "Clock divider"]
    pub mod DIV0 {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Direct output."]
            pub const DIV0_0: u32 = 0;
            #[doc = "Divide by 2."]
            pub const DIV0_1: u32 = 0x01;
            #[doc = "Divide by 3."]
            pub const DIV0_2: u32 = 0x02;
            #[doc = "Divide by 4."]
            pub const DIV0_3: u32 = 0x03;
            #[doc = "Divide by 16."]
            pub const DIV0_15: u32 = 0x0f;
        }
    }
    #[doc = "Clock group global restart count"]
    pub mod RSTDIV {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "OFF"]
    pub mod OFF {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is running."]
            pub const OFF_0: u32 = 0;
            #[doc = "Turn off clock."]
            pub const OFF_1: u32 = 0x01;
        }
    }
    #[doc = "Grade"]
    pub mod GRADE {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "Setpoint setting"]
pub mod CLOCK_GROUP1_SETPOINT15 {
    #[doc = "Clock divider"]
    pub mod DIV0 {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Direct output."]
            pub const DIV0_0: u32 = 0;
            #[doc = "Divide by 2."]
            pub const DIV0_1: u32 = 0x01;
            #[doc = "Divide by 3."]
            pub const DIV0_2: u32 = 0x02;
            #[doc = "Divide by 4."]
            pub const DIV0_3: u32 = 0x03;
            #[doc = "Divide by 16."]
            pub const DIV0_15: u32 = 0x0f;
        }
    }
    #[doc = "Clock group global restart count"]
    pub mod RSTDIV {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "OFF"]
    pub mod OFF {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is running."]
            pub const OFF_0: u32 = 0;
            #[doc = "Turn off clock."]
            pub const OFF_1: u32 = 0x01;
        }
    }
    #[doc = "Grade"]
    pub mod GRADE {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "General Purpose Register"]
pub mod GPR_PRIVATE1 {
    #[doc = "GP register"]
    pub mod GPR {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff_ffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "General Purpose Register"]
pub mod GPR_PRIVATE1_SET {
    #[doc = "GP register"]
    pub mod GPR {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff_ffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "General Purpose Register"]
pub mod GPR_PRIVATE1_CLR {
    #[doc = "GP register"]
    pub mod GPR {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff_ffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "General Purpose Register"]
pub mod GPR_PRIVATE1_TOG {
    #[doc = "GP register"]
    pub mod GPR {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff_ffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "GPR access control"]
pub mod GPR_PRIVATE1_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "Clock can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "Lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This domain is NOT allowed to change clock."]
            pub const WHITE_LIST_0: u32 = 0;
            #[doc = "This domain is allowed to change clock."]
            pub const WHITE_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does NOT work in Domain Mode."]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode."]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "GPR access control"]
pub mod GPR_PRIVATE1_AUTHEN_SET {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Low power and access control by Domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "GPR access control"]
pub mod GPR_PRIVATE1_AUTHEN_CLR {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Low power and access control by Domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "GPR access control"]
pub mod GPR_PRIVATE1_AUTHEN_TOG {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Low power and access control by Domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "General Purpose Register"]
pub mod GPR_PRIVATE2 {
    #[doc = "GP register"]
    pub mod GPR {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff_ffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "General Purpose Register"]
pub mod GPR_PRIVATE2_SET {
    #[doc = "GP register"]
    pub mod GPR {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff_ffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "General Purpose Register"]
pub mod GPR_PRIVATE2_CLR {
    #[doc = "GP register"]
    pub mod GPR {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff_ffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "General Purpose Register"]
pub mod GPR_PRIVATE2_TOG {
    #[doc = "GP register"]
    pub mod GPR {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff_ffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "GPR access control"]
pub mod GPR_PRIVATE2_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "Clock can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "Lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This domain is NOT allowed to change clock."]
            pub const WHITE_LIST_0: u32 = 0;
            #[doc = "This domain is allowed to change clock."]
            pub const WHITE_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does NOT work in Domain Mode."]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode."]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "GPR access control"]
pub mod GPR_PRIVATE2_AUTHEN_SET {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Low power and access control by Domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "GPR access control"]
pub mod GPR_PRIVATE2_AUTHEN_CLR {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Low power and access control by Domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "GPR access control"]
pub mod GPR_PRIVATE2_AUTHEN_TOG {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Low power and access control by Domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "General Purpose Register"]
pub mod GPR_PRIVATE3 {
    #[doc = "GP register"]
    pub mod GPR {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff_ffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "General Purpose Register"]
pub mod GPR_PRIVATE3_SET {
    #[doc = "GP register"]
    pub mod GPR {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff_ffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "General Purpose Register"]
pub mod GPR_PRIVATE3_CLR {
    #[doc = "GP register"]
    pub mod GPR {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff_ffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "General Purpose Register"]
pub mod GPR_PRIVATE3_TOG {
    #[doc = "GP register"]
    pub mod GPR {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff_ffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "GPR access control"]
pub mod GPR_PRIVATE3_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "Clock can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "Lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This domain is NOT allowed to change clock."]
            pub const WHITE_LIST_0: u32 = 0;
            #[doc = "This domain is allowed to change clock."]
            pub const WHITE_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does NOT work in Domain Mode."]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode."]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "GPR access control"]
pub mod GPR_PRIVATE3_AUTHEN_SET {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Low power and access control by Domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "GPR access control"]
pub mod GPR_PRIVATE3_AUTHEN_CLR {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Low power and access control by Domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "GPR access control"]
pub mod GPR_PRIVATE3_AUTHEN_TOG {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Low power and access control by Domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "General Purpose Register"]
pub mod GPR_PRIVATE4 {
    #[doc = "GP register"]
    pub mod GPR {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff_ffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "General Purpose Register"]
pub mod GPR_PRIVATE4_SET {
    #[doc = "GP register"]
    pub mod GPR {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff_ffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "General Purpose Register"]
pub mod GPR_PRIVATE4_CLR {
    #[doc = "GP register"]
    pub mod GPR {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff_ffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "General Purpose Register"]
pub mod GPR_PRIVATE4_TOG {
    #[doc = "GP register"]
    pub mod GPR {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff_ffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "GPR access control"]
pub mod GPR_PRIVATE4_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "Clock can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "Lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This domain is NOT allowed to change clock."]
            pub const WHITE_LIST_0: u32 = 0;
            #[doc = "This domain is allowed to change clock."]
            pub const WHITE_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does NOT work in Domain Mode."]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode."]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "GPR access control"]
pub mod GPR_PRIVATE4_AUTHEN_SET {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Low power and access control by Domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "GPR access control"]
pub mod GPR_PRIVATE4_AUTHEN_CLR {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Low power and access control by Domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "GPR access control"]
pub mod GPR_PRIVATE4_AUTHEN_TOG {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Low power and access control by Domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "General Purpose Register"]
pub mod GPR_PRIVATE5 {
    #[doc = "GP register"]
    pub mod GPR {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff_ffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "General Purpose Register"]
pub mod GPR_PRIVATE5_SET {
    #[doc = "GP register"]
    pub mod GPR {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff_ffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "General Purpose Register"]
pub mod GPR_PRIVATE5_CLR {
    #[doc = "GP register"]
    pub mod GPR {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff_ffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "General Purpose Register"]
pub mod GPR_PRIVATE5_TOG {
    #[doc = "GP register"]
    pub mod GPR {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff_ffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "GPR access control"]
pub mod GPR_PRIVATE5_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "Clock can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "Lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This domain is NOT allowed to change clock."]
            pub const WHITE_LIST_0: u32 = 0;
            #[doc = "This domain is allowed to change clock."]
            pub const WHITE_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does NOT work in Domain Mode."]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode."]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "GPR access control"]
pub mod GPR_PRIVATE5_AUTHEN_SET {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Low power and access control by Domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "GPR access control"]
pub mod GPR_PRIVATE5_AUTHEN_CLR {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Low power and access control by Domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "GPR access control"]
pub mod GPR_PRIVATE5_AUTHEN_TOG {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Low power and access control by Domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "General Purpose Register"]
pub mod GPR_PRIVATE6 {
    #[doc = "GP register"]
    pub mod GPR {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff_ffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "General Purpose Register"]
pub mod GPR_PRIVATE6_SET {
    #[doc = "GP register"]
    pub mod GPR {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff_ffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "General Purpose Register"]
pub mod GPR_PRIVATE6_CLR {
    #[doc = "GP register"]
    pub mod GPR {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff_ffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "General Purpose Register"]
pub mod GPR_PRIVATE6_TOG {
    #[doc = "GP register"]
    pub mod GPR {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff_ffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "GPR access control"]
pub mod GPR_PRIVATE6_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "Clock can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "Lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This domain is NOT allowed to change clock."]
            pub const WHITE_LIST_0: u32 = 0;
            #[doc = "This domain is allowed to change clock."]
            pub const WHITE_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does NOT work in Domain Mode."]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode."]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "GPR access control"]
pub mod GPR_PRIVATE6_AUTHEN_SET {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Low power and access control by Domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "GPR access control"]
pub mod GPR_PRIVATE6_AUTHEN_CLR {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Low power and access control by Domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "GPR access control"]
pub mod GPR_PRIVATE6_AUTHEN_TOG {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Low power and access control by Domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "General Purpose Register"]
pub mod GPR_PRIVATE7 {
    #[doc = "GP register"]
    pub mod GPR {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff_ffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "General Purpose Register"]
pub mod GPR_PRIVATE7_SET {
    #[doc = "GP register"]
    pub mod GPR {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff_ffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "General Purpose Register"]
pub mod GPR_PRIVATE7_CLR {
    #[doc = "GP register"]
    pub mod GPR {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff_ffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "General Purpose Register"]
pub mod GPR_PRIVATE7_TOG {
    #[doc = "GP register"]
    pub mod GPR {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff_ffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "GPR access control"]
pub mod GPR_PRIVATE7_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "Clock can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "Lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This domain is NOT allowed to change clock."]
            pub const WHITE_LIST_0: u32 = 0;
            #[doc = "This domain is allowed to change clock."]
            pub const WHITE_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does NOT work in Domain Mode."]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode."]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "GPR access control"]
pub mod GPR_PRIVATE7_AUTHEN_SET {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Low power and access control by Domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "GPR access control"]
pub mod GPR_PRIVATE7_AUTHEN_CLR {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Low power and access control by Domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "GPR access control"]
pub mod GPR_PRIVATE7_AUTHEN_TOG {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Low power and access control by Domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG0_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG0_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG0_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG0_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG0_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG0_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG1_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG1_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG1_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG1_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG1_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG1_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG2_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG2_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG Setpoint setting"]
pub mod LPCG2_SETPOINT {
    #[doc = "Setpoints"]
    pub mod SETPOINT {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Standby"]
    pub mod STANDBY {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "LPCG working status"]
pub mod LPCG2_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG2_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG2_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG2_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG3_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG3_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG Setpoint setting"]
pub mod LPCG3_SETPOINT {
    #[doc = "Setpoints"]
    pub mod SETPOINT {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Standby"]
    pub mod STANDBY {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "LPCG working status"]
pub mod LPCG3_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG3_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG3_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG3_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG4_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG4_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG Setpoint setting"]
pub mod LPCG4_SETPOINT {
    #[doc = "Setpoints"]
    pub mod SETPOINT {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Standby"]
    pub mod STANDBY {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "LPCG working status"]
pub mod LPCG4_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG4_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG4_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG4_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG5_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG5_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG Setpoint setting"]
pub mod LPCG5_SETPOINT {
    #[doc = "Setpoints"]
    pub mod SETPOINT {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Standby"]
    pub mod STANDBY {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "LPCG working status"]
pub mod LPCG5_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG5_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG5_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG5_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG6_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG6_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG Setpoint setting"]
pub mod LPCG6_SETPOINT {
    #[doc = "Setpoints"]
    pub mod SETPOINT {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Standby"]
    pub mod STANDBY {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "LPCG working status"]
pub mod LPCG6_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG6_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG6_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG6_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG7_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG7_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG Setpoint setting"]
pub mod LPCG7_SETPOINT {
    #[doc = "Setpoints"]
    pub mod SETPOINT {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Standby"]
    pub mod STANDBY {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "LPCG working status"]
pub mod LPCG7_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG7_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG7_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG7_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG8_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG8_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG Setpoint setting"]
pub mod LPCG8_SETPOINT {
    #[doc = "Setpoints"]
    pub mod SETPOINT {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Standby"]
    pub mod STANDBY {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "LPCG working status"]
pub mod LPCG8_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG8_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG8_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG8_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG9_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG9_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG Setpoint setting"]
pub mod LPCG9_SETPOINT {
    #[doc = "Setpoints"]
    pub mod SETPOINT {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Standby"]
    pub mod STANDBY {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "LPCG working status"]
pub mod LPCG9_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG9_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG9_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG9_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG10_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG10_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG Setpoint setting"]
pub mod LPCG10_SETPOINT {
    #[doc = "Setpoints"]
    pub mod SETPOINT {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Standby"]
    pub mod STANDBY {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "LPCG working status"]
pub mod LPCG10_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG10_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG10_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG10_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG11_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG11_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG Setpoint setting"]
pub mod LPCG11_SETPOINT {
    #[doc = "Setpoints"]
    pub mod SETPOINT {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Standby"]
    pub mod STANDBY {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "LPCG working status"]
pub mod LPCG11_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG11_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG11_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG11_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG12_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG12_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG Setpoint setting"]
pub mod LPCG12_SETPOINT {
    #[doc = "Setpoints"]
    pub mod SETPOINT {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Standby"]
    pub mod STANDBY {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "LPCG working status"]
pub mod LPCG12_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG12_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG12_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG12_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG13_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG13_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG13_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG13_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG13_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG13_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG14_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG14_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG Setpoint setting"]
pub mod LPCG14_SETPOINT {
    #[doc = "Setpoints"]
    pub mod SETPOINT {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Standby"]
    pub mod STANDBY {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "LPCG working status"]
pub mod LPCG14_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG14_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG14_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG14_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG15_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG15_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG Setpoint setting"]
pub mod LPCG15_SETPOINT {
    #[doc = "Setpoints"]
    pub mod SETPOINT {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Standby"]
    pub mod STANDBY {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "LPCG working status"]
pub mod LPCG15_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG15_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG15_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG15_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG16_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG16_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG Setpoint setting"]
pub mod LPCG16_SETPOINT {
    #[doc = "Setpoints"]
    pub mod SETPOINT {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Standby"]
    pub mod STANDBY {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "LPCG working status"]
pub mod LPCG16_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG16_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG16_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG16_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG17_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG17_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG Setpoint setting"]
pub mod LPCG17_SETPOINT {
    #[doc = "Setpoints"]
    pub mod SETPOINT {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Standby"]
    pub mod STANDBY {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "LPCG working status"]
pub mod LPCG17_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG17_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG17_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG17_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG18_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG18_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG Setpoint setting"]
pub mod LPCG18_SETPOINT {
    #[doc = "Setpoints"]
    pub mod SETPOINT {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Standby"]
    pub mod STANDBY {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "LPCG working status"]
pub mod LPCG18_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG18_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG18_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG18_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG19_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG19_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG Setpoint setting"]
pub mod LPCG19_SETPOINT {
    #[doc = "Setpoints"]
    pub mod SETPOINT {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Standby"]
    pub mod STANDBY {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "LPCG working status"]
pub mod LPCG19_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG19_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG19_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG19_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG20_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG20_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG20_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG20_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG20_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG20_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG21_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG21_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG21_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG21_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG21_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG21_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG22_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG22_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG22_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG22_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG22_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG22_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG23_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG23_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG23_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG23_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG23_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG23_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG24_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG24_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG Setpoint setting"]
pub mod LPCG24_SETPOINT {
    #[doc = "Setpoints"]
    pub mod SETPOINT {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Standby"]
    pub mod STANDBY {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "LPCG working status"]
pub mod LPCG24_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG24_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG24_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG24_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG25_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG25_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG Setpoint setting"]
pub mod LPCG25_SETPOINT {
    #[doc = "Setpoints"]
    pub mod SETPOINT {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Standby"]
    pub mod STANDBY {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "LPCG working status"]
pub mod LPCG25_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG25_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG25_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG25_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG26_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG26_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG Setpoint setting"]
pub mod LPCG26_SETPOINT {
    #[doc = "Setpoints"]
    pub mod SETPOINT {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Standby"]
    pub mod STANDBY {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "LPCG working status"]
pub mod LPCG26_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG26_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG26_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG26_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG27_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG27_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG Setpoint setting"]
pub mod LPCG27_SETPOINT {
    #[doc = "Setpoints"]
    pub mod SETPOINT {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Standby"]
    pub mod STANDBY {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "LPCG working status"]
pub mod LPCG27_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG27_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG27_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG27_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG28_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG28_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG Setpoint setting"]
pub mod LPCG28_SETPOINT {
    #[doc = "Setpoints"]
    pub mod SETPOINT {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Standby"]
    pub mod STANDBY {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "LPCG working status"]
pub mod LPCG28_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG28_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG28_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG28_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG29_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG29_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG Setpoint setting"]
pub mod LPCG29_SETPOINT {
    #[doc = "Setpoints"]
    pub mod SETPOINT {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Standby"]
    pub mod STANDBY {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "LPCG working status"]
pub mod LPCG29_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG29_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG29_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG29_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG30_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG30_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG Setpoint setting"]
pub mod LPCG30_SETPOINT {
    #[doc = "Setpoints"]
    pub mod SETPOINT {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Standby"]
    pub mod STANDBY {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "LPCG working status"]
pub mod LPCG30_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG30_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG30_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG30_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG31_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG31_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG Setpoint setting"]
pub mod LPCG31_SETPOINT {
    #[doc = "Setpoints"]
    pub mod SETPOINT {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Standby"]
    pub mod STANDBY {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "LPCG working status"]
pub mod LPCG31_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG31_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG31_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG31_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG32_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG32_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG Setpoint setting"]
pub mod LPCG32_SETPOINT {
    #[doc = "Setpoints"]
    pub mod SETPOINT {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Standby"]
    pub mod STANDBY {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "LPCG working status"]
pub mod LPCG32_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG32_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG32_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG32_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG33_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG33_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG Setpoint setting"]
pub mod LPCG33_SETPOINT {
    #[doc = "Setpoints"]
    pub mod SETPOINT {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Standby"]
    pub mod STANDBY {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "LPCG working status"]
pub mod LPCG33_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG33_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG33_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG33_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG34_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG34_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG Setpoint setting"]
pub mod LPCG34_SETPOINT {
    #[doc = "Setpoints"]
    pub mod SETPOINT {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Standby"]
    pub mod STANDBY {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "LPCG working status"]
pub mod LPCG34_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG34_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG34_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG34_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG35_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG35_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG Setpoint setting"]
pub mod LPCG35_SETPOINT {
    #[doc = "Setpoints"]
    pub mod SETPOINT {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Standby"]
    pub mod STANDBY {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "LPCG working status"]
pub mod LPCG35_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG35_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG35_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG35_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG36_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG36_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG Setpoint setting"]
pub mod LPCG36_SETPOINT {
    #[doc = "Setpoints"]
    pub mod SETPOINT {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Standby"]
    pub mod STANDBY {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "LPCG working status"]
pub mod LPCG36_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG36_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG36_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG36_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG37_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG37_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG Setpoint setting"]
pub mod LPCG37_SETPOINT {
    #[doc = "Setpoints"]
    pub mod SETPOINT {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Standby"]
    pub mod STANDBY {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "LPCG working status"]
pub mod LPCG37_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG37_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG37_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG37_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG38_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG38_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG Setpoint setting"]
pub mod LPCG38_SETPOINT {
    #[doc = "Setpoints"]
    pub mod SETPOINT {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Standby"]
    pub mod STANDBY {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "LPCG working status"]
pub mod LPCG38_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG38_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG38_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG38_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG39_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG39_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG Setpoint setting"]
pub mod LPCG39_SETPOINT {
    #[doc = "Setpoints"]
    pub mod SETPOINT {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Standby"]
    pub mod STANDBY {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "LPCG working status"]
pub mod LPCG39_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG39_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG39_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG39_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG40_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG40_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG Setpoint setting"]
pub mod LPCG40_SETPOINT {
    #[doc = "Setpoints"]
    pub mod SETPOINT {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Standby"]
    pub mod STANDBY {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "LPCG working status"]
pub mod LPCG40_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG40_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG40_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG40_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG41_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG41_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG41_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG41_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG41_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG41_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG42_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG42_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG42_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG42_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG42_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG42_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG43_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG43_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG Setpoint setting"]
pub mod LPCG43_SETPOINT {
    #[doc = "Setpoints"]
    pub mod SETPOINT {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Standby"]
    pub mod STANDBY {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "LPCG working status"]
pub mod LPCG43_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG43_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG43_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG43_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG44_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG44_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG Setpoint setting"]
pub mod LPCG44_SETPOINT {
    #[doc = "Setpoints"]
    pub mod SETPOINT {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Standby"]
    pub mod STANDBY {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "LPCG working status"]
pub mod LPCG44_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG44_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG44_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG44_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG45_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG45_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG Setpoint setting"]
pub mod LPCG45_SETPOINT {
    #[doc = "Setpoints"]
    pub mod SETPOINT {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Standby"]
    pub mod STANDBY {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "LPCG working status"]
pub mod LPCG45_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG45_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG45_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG45_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG46_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG46_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG Setpoint setting"]
pub mod LPCG46_SETPOINT {
    #[doc = "Setpoints"]
    pub mod SETPOINT {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Standby"]
    pub mod STANDBY {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "LPCG working status"]
pub mod LPCG46_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG46_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG46_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG46_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG47_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG47_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG Setpoint setting"]
pub mod LPCG47_SETPOINT {
    #[doc = "Setpoints"]
    pub mod SETPOINT {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Standby"]
    pub mod STANDBY {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "LPCG working status"]
pub mod LPCG47_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG47_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG47_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG47_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG48_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG48_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG Setpoint setting"]
pub mod LPCG48_SETPOINT {
    #[doc = "Setpoints"]
    pub mod SETPOINT {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Standby"]
    pub mod STANDBY {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0xffff << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
}
#[doc = "LPCG working status"]
pub mod LPCG48_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG48_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG48_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG48_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG49_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG49_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG49_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG49_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG49_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG49_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG50_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG50_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG50_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG50_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG50_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG50_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG51_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG51_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG51_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG51_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG51_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG51_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG52_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG52_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG52_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG52_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG52_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG52_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG53_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG53_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG53_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG53_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG53_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG53_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG54_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG54_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG54_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG54_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG54_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG54_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG55_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG55_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG55_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG55_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG55_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG55_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG56_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG56_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG56_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG56_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG56_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG56_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG57_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG57_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG57_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG57_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG57_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG57_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG58_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG58_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG58_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG58_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG58_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG58_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG59_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG59_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG59_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG59_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG59_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG59_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG60_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG60_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG60_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG60_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG60_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG60_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG61_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG61_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG61_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG61_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG61_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG61_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG62_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG62_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG62_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG62_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG62_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG62_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG63_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG63_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG63_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG63_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG63_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG63_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG64_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG64_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG64_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG64_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG64_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG64_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG65_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG65_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG65_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG65_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG65_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG65_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG66_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG66_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG66_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG66_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG66_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG66_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG67_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG67_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG67_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG67_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG67_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG67_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG68_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG68_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG68_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG68_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG68_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG68_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG69_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG69_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG69_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG69_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG69_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG69_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG70_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG70_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG70_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG70_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG70_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG70_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG71_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG71_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG71_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG71_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG71_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG71_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG72_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG72_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG72_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG72_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG72_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG72_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG73_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG73_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG73_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG73_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG73_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG73_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG74_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG74_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG74_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG74_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG74_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG74_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG75_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG75_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG75_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG75_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG75_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG75_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG76_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG76_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG76_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG76_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG76_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG76_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG77_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG77_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG77_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG77_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG77_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG77_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG78_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG78_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG78_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG78_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG78_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG78_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG79_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG79_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG79_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG79_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG79_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG79_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG80_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG80_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG80_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG80_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG80_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG80_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG81_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG81_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG81_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG81_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG81_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG81_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG82_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG82_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG82_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG82_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG82_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG82_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG83_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG83_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG83_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG83_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG83_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG83_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG84_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG84_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG84_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG84_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG84_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG84_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG85_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG85_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG85_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG85_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG85_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG85_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG86_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG86_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG86_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG86_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG86_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG86_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG87_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG87_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG87_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG87_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG87_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG87_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG88_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG88_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG88_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG88_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG88_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG88_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG89_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG89_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG89_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG89_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG89_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG89_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG90_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG90_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG90_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG90_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG90_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG90_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG91_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG91_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG91_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG91_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG91_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG91_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG92_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG92_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG92_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG92_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG92_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG92_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG93_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG93_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG93_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG93_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG93_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG93_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG94_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG94_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG94_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG94_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG94_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG94_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG95_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG95_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG95_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG95_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG95_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG95_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG96_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG96_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG96_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG96_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG96_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG96_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG97_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG97_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG97_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG97_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG97_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG97_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG98_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG98_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG98_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG98_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG98_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG98_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG99_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG99_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG99_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG99_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG99_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG99_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG100_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG100_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG100_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG100_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG100_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG100_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG101_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG101_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG101_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG101_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG101_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG101_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG102_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG102_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG102_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG102_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG102_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG102_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG103_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG103_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG103_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG103_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG103_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG103_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG104_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG104_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG104_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG104_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG104_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG104_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG105_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG105_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG105_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG105_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG105_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG105_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG106_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG106_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG106_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG106_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG106_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG106_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG107_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG107_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG107_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG107_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG107_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG107_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG108_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG108_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG108_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG108_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG108_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG108_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG109_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG109_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG109_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG109_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG109_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG109_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG110_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG110_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG110_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG110_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG110_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG110_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG111_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG111_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG111_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG111_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG111_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG111_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG112_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG112_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG112_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG112_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG112_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG112_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG113_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG113_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG113_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG113_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG113_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG113_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG114_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG114_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG114_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG114_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG114_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG114_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG115_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG115_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG115_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG115_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG115_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG115_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG116_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG116_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG116_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG116_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG116_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG116_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG117_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG117_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG117_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG117_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG117_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG117_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG118_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG118_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG118_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG118_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG118_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG118_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG119_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG119_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG119_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG119_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG119_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG119_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG120_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG120_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG120_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG120_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG120_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG120_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG121_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG121_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG121_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG121_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG121_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG121_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG122_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG122_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG122_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG122_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG122_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG122_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG123_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG123_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG123_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG123_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG123_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG123_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG124_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG124_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG124_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG124_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG124_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG124_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG125_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG125_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG125_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG125_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG125_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG125_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG126_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG126_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG126_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG126_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG126_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG126_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG127_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG127_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG127_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG127_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG127_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG127_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG128_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG128_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG128_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG128_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG128_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG128_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG129_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG129_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG129_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG129_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG129_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG129_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG130_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG130_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG130_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG130_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG130_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG130_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG131_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG131_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG131_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG131_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG131_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG131_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG132_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG132_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG132_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG132_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG132_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG132_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG133_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG133_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG133_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG133_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG133_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG133_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG134_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG134_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG134_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG134_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG134_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG134_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG135_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG135_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG135_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG135_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG135_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG135_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG136_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG136_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG136_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG136_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG136_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG136_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG direct control"]
pub mod LPCG137_DIRECT {
    #[doc = "LPCG on"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG domain control"]
pub mod LPCG137_DOMAIN {
    #[doc = "Current dependence level"]
    pub mod LEVEL {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL0 {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL1 {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL2 {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
    #[doc = "Depend level"]
    pub mod LEVEL3 {
        pub const offset: u32 = 28;
        pub const mask: u32 = 0x07 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "This clock source is not needed in any mode, and can be turned off"]
            pub const NO: u32 = 0;
            #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
            pub const R: u32 = 0x01;
            #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
            pub const RW: u32 = 0x02;
            #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
            pub const RWS: u32 = 0x03;
            #[doc = "This clock source is always on in any mode (including SUSPEND)"]
            pub const ALL: u32 = 0x04;
        }
    }
}
#[doc = "LPCG working status"]
pub mod LPCG137_STATUS0 {
    #[doc = "LPCG current state"]
    pub mod ON {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is OFF."]
            pub const ON_0: u32 = 0;
            #[doc = "LPCG is ON."]
            pub const ON_1: u32 = 0x01;
        }
    }
    #[doc = "Domains that own this clock gate"]
    pub mod ACTIVE_DOMAIN {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock not owned by any domain"]
            pub const NO: u32 = 0;
            #[doc = "Clock owned by Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Clock owned by Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Clock owned by Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Clock owned by Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Clock owned by Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Clock owned by Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Clock owned by Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Clock owned by Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Clock owned by Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Clock owned by Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Clock owned by all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
    #[doc = "Enable status from each domain"]
    pub mod DOMAIN_ENABLE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No domain request"]
            pub const NO: u32 = 0;
            #[doc = "Request from Domain0"]
            pub const ZERO: u32 = 0x01;
            #[doc = "Request from Domain1"]
            pub const TWO: u32 = 0x02;
            #[doc = "Request from Domain0 and Domain1"]
            pub const THREE: u32 = 0x03;
            #[doc = "Request from Domain2"]
            pub const FOUR: u32 = 0x04;
            #[doc = "Request from Domain0 and Domain2"]
            pub const FIVE: u32 = 0x05;
            #[doc = "Request from Domain1 and Domain2"]
            pub const SIX: u32 = 0x06;
            #[doc = "Request from Domain0, Domain1 and Domain 2"]
            pub const SEVEN: u32 = 0x07;
            #[doc = "Request from Domain3"]
            pub const EIGHT: u32 = 0x08;
            #[doc = "Request from Domain0 and Domain3"]
            pub const NINE: u32 = 0x09;
            #[doc = "Request from Domain1 and Domain3"]
            pub const TEN: u32 = 0x0a;
            #[doc = "Request from Domain2 and Domain3"]
            pub const ELV: u32 = 0x0b;
            #[doc = "Request from Domain0, Domain 1, and Domain3"]
            pub const TW: u32 = 0x0c;
            #[doc = "Request from Domain0, Domain 2, and Domain3"]
            pub const TH: u32 = 0x0d;
            #[doc = "Request from Domain1, Domain 2, and Domain3"]
            pub const FR: u32 = 0x0e;
            #[doc = "Request from all domains"]
            pub const ALL: u32 = 0x0f;
        }
    }
}
#[doc = "LPCG low power status"]
pub mod LPCG137_STATUS1 {
    #[doc = "Domain0 Low Power Mode"]
    pub mod CPU0_MODE {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain0 request enter Low Power Mode"]
    pub mod CPU0_MODE_REQUEST {
        pub const offset: u32 = 2;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain0 Low Power Mode task done"]
    pub mod CPU0_MODE_DONE {
        pub const offset: u32 = 3;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode"]
    pub mod CPU1_MODE {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain1 request enter Low Power Mode"]
    pub mod CPU1_MODE_REQUEST {
        pub const offset: u32 = 6;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain1 Low Power Mode task done"]
    pub mod CPU1_MODE_DONE {
        pub const offset: u32 = 7;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode"]
    pub mod CPU2_MODE {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain2 request enter Low Power Mode"]
    pub mod CPU2_MODE_REQUEST {
        pub const offset: u32 = 10;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain2 Low Power Mode task done"]
    pub mod CPU2_MODE_DONE {
        pub const offset: u32 = 11;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode"]
    pub mod CPU3_MODE {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x03 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Run"]
            pub const RUN: u32 = 0;
            #[doc = "Wait"]
            pub const WAIT: u32 = 0x01;
            #[doc = "Stop"]
            pub const STOP: u32 = 0x02;
            #[doc = "Suspend"]
            pub const SUSPEND: u32 = 0x03;
        }
    }
    #[doc = "Domain3 request enter Low Power Mode"]
    pub mod CPU3_MODE_REQUEST {
        pub const offset: u32 = 14;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Request from domain to enter Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Domain3 Low Power Mode task done"]
    pub mod CPU3_MODE_DONE {
        pub const offset: u32 = 15;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock is not gated"]
            pub const DIS: u32 = 0;
            #[doc = "Clock is gated-off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Next Setpoint to change to"]
    pub mod TARGET_SETPOINT {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Current Setpoint"]
    pub mod CURRENT_SETPOINT {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Clock gate turn off request from GPC Setpoint"]
    pub mod SETPOINT_OFF_REQUEST {
        pub const offset: u32 = 24;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn off finish from GPC Setpoint"]
    pub mod SETPOINT_OFF_DONE {
        pub const offset: u32 = 25;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned off"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned off"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on request from GPC Setpoint"]
    pub mod SETPOINT_ON_REQUEST {
        pub const offset: u32 = 26;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "No request"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate requested to be turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Clock gate turn on finish from GPC Setpoint"]
    pub mod SETPOINT_ON_DONE {
        pub const offset: u32 = 27;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock gate is not turned on"]
            pub const DIS: u32 = 0;
            #[doc = "Clock gate is turned on"]
            pub const ENABLE: u32 = 0x01;
        }
    }
}
#[doc = "LPCG configuration"]
pub mod LPCG137_CONFIG {
    #[doc = "Setpoint present"]
    pub mod SETPOINT_PRESENT {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Setpoint is not implemented."]
            pub const SETPOINT_PRESENT_0: u32 = 0;
            #[doc = "Setpoint is implemented."]
            pub const SETPOINT_PRESENT_1: u32 = 0x01;
        }
    }
}
#[doc = "LPCG access control"]
pub mod LPCG137_AUTHEN {
    #[doc = "User access"]
    pub mod TZ_USER {
        pub const offset: u32 = 0;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG cannot be changed in user mode."]
            pub const TZ_USER_0: u32 = 0;
            #[doc = "LPCG can be changed in user mode."]
            pub const TZ_USER_1: u32 = 0x01;
        }
    }
    #[doc = "Non-secure access"]
    pub mod TZ_NS {
        pub const offset: u32 = 1;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Cannot be changed in Non-secure mode."]
            pub const TZ_NS_0: u32 = 0;
            #[doc = "Can be changed in Non-secure mode."]
            pub const TZ_NS_1: u32 = 0x01;
        }
    }
    #[doc = "lock truszone setting"]
    pub mod LOCK_TZ {
        pub const offset: u32 = 4;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Trustzone setting is not locked."]
            pub const LOCK_TZ_0: u32 = 0;
            #[doc = "Trustzone setting is locked."]
            pub const LOCK_TZ_1: u32 = 0x01;
        }
    }
    #[doc = "Whitelist"]
    pub mod WHITE_LIST {
        pub const offset: u32 = 8;
        pub const mask: u32 = 0x0f << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {}
    }
    #[doc = "Lock Whitelist"]
    pub mod LOCK_LIST {
        pub const offset: u32 = 12;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Whitelist is not locked."]
            pub const LOCK_LIST_0: u32 = 0;
            #[doc = "Whitelist is locked."]
            pub const LOCK_LIST_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by domain"]
    pub mod DOMAIN_MODE {
        pub const offset: u32 = 16;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "Clock does not work in Domain Mode"]
            pub const DOMAIN_MODE_0: u32 = 0;
            #[doc = "Clock works in Domain Mode"]
            pub const DOMAIN_MODE_1: u32 = 0x01;
        }
    }
    #[doc = "Low power and access control by Setpoint"]
    pub mod SETPOINT_MODE {
        pub const offset: u32 = 17;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Setpoint controlled Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Setpoint controlled Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "CPU Low Power Mode"]
    pub mod CPULPM {
        pub const offset: u32 = 18;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "LPCG is not functioning in Low power Mode"]
            pub const DISABLE: u32 = 0;
            #[doc = "LPCG is functioning in Low Power Mode"]
            pub const ENABLE: u32 = 0x01;
        }
    }
    #[doc = "Lock low power and access mode"]
    pub mod LOCK_MODE {
        pub const offset: u32 = 20;
        pub const mask: u32 = 0x01 << offset;
        pub mod R {}
        pub mod W {}
        pub mod RW {
            #[doc = "MODE is not locked."]
            pub const LOCK_MODE_0: u32 = 0;
            #[doc = "MODE is locked."]
            pub const LOCK_MODE_1: u32 = 0x01;
        }
    }
}
pub mod clockroot {
    #[doc = "Clock root select Registers"]
    #[repr(C)]
    pub struct RegisterBlock {
        #[doc = "Clock root control"]
        pub CLOCK_ROOT_CONTROL: crate::RWRegister<u32>,
        #[doc = "Clock root control"]
        pub CLOCK_ROOT_CONTROL_SET: crate::RWRegister<u32>,
        #[doc = "Clock root control"]
        pub CLOCK_ROOT_CONTROL_CLR: crate::RWRegister<u32>,
        #[doc = "Clock root control"]
        pub CLOCK_ROOT_CONTROL_TOG: crate::RWRegister<u32>,
        _reserved0: [u8; 0x10],
        #[doc = "Clock root working status"]
        pub CLOCK_ROOT_STATUS0: crate::RORegister<u32>,
        #[doc = "Clock root low power status"]
        pub CLOCK_ROOT_STATUS1: crate::RORegister<u32>,
        _reserved1: [u8; 0x04],
        #[doc = "Clock root configuration"]
        pub CLOCK_ROOT_CONFIG: crate::RORegister<u32>,
        #[doc = "Clock root access control"]
        pub CLOCK_ROOT_AUTHEN: crate::RWRegister<u32>,
        #[doc = "Clock root access control"]
        pub CLOCK_ROOT_AUTHEN_SET: crate::RWRegister<u32>,
        #[doc = "Clock root access control"]
        pub CLOCK_ROOT_AUTHEN_CLR: crate::RWRegister<u32>,
        #[doc = "Clock root access control"]
        pub CLOCK_ROOT_AUTHEN_TOG: crate::RWRegister<u32>,
        #[doc = "Setpoint setting"]
        pub CLOCK_ROOT_SETPOINT: [crate::RWRegister<u32>; 16usize],
    }
    #[doc = "Clock root control"]
    pub mod CLOCK_ROOT_CONTROL {
        #[doc = "Clock divider"]
        pub mod DIV {
            pub const offset: u32 = 0;
            pub const mask: u32 = 0xff << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Clock multiplexer"]
        pub mod MUX {
            pub const offset: u32 = 8;
            pub const mask: u32 = 0x07 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "OFF"]
        pub mod OFF {
            pub const offset: u32 = 24;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Turn on clock"]
                pub const ON: u32 = 0;
                #[doc = "Turn off clock"]
                pub const OFF: u32 = 0x01;
            }
        }
    }
    #[doc = "Clock root control"]
    pub mod CLOCK_ROOT_CONTROL_SET {
        #[doc = "Clock divider"]
        pub mod DIV {
            pub const offset: u32 = 0;
            pub const mask: u32 = 0xff << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Clock multiplexer"]
        pub mod MUX {
            pub const offset: u32 = 8;
            pub const mask: u32 = 0x07 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "OFF"]
        pub mod OFF {
            pub const offset: u32 = 24;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
    }
    #[doc = "Clock root control"]
    pub mod CLOCK_ROOT_CONTROL_CLR {
        #[doc = "Clock divider"]
        pub mod DIV {
            pub const offset: u32 = 0;
            pub const mask: u32 = 0xff << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Clock multiplexer"]
        pub mod MUX {
            pub const offset: u32 = 8;
            pub const mask: u32 = 0x07 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "OFF"]
        pub mod OFF {
            pub const offset: u32 = 24;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
    }
    #[doc = "Clock root control"]
    pub mod CLOCK_ROOT_CONTROL_TOG {
        #[doc = "Clock divider"]
        pub mod DIV {
            pub const offset: u32 = 0;
            pub const mask: u32 = 0xff << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Clock multiplexer"]
        pub mod MUX {
            pub const offset: u32 = 8;
            pub const mask: u32 = 0x07 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "OFF"]
        pub mod OFF {
            pub const offset: u32 = 24;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
    }
    #[doc = "Clock root working status"]
    pub mod CLOCK_ROOT_STATUS0 {
        #[doc = "Current clock root DIV setting"]
        pub mod DIV {
            pub const offset: u32 = 0;
            pub const mask: u32 = 0xff << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Current clock root MUX setting"]
        pub mod MUX {
            pub const offset: u32 = 8;
            pub const mask: u32 = 0x07 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Current clock root OFF setting"]
        pub mod OFF {
            pub const offset: u32 = 24;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Clock is running"]
                pub const OFF_0: u32 = 0;
                #[doc = "Clock is disabled/off"]
                pub const OFF_1: u32 = 0x01;
            }
        }
        #[doc = "Current clock root POWERDOWN setting"]
        pub mod POWERDOWN {
            pub const offset: u32 = 27;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Clock root is running"]
                pub const RUN: u32 = 0;
                #[doc = "Clock root is Powered Down"]
                pub const PWRDWN: u32 = 0x01;
            }
        }
        #[doc = "Internal updating in generation logic"]
        pub mod SLICE_BUSY {
            pub const offset: u32 = 28;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Clock generation logic is not busy"]
                pub const DIS: u32 = 0;
                #[doc = "Clock generation logic is applying the new setting"]
                pub const ENABLE: u32 = 0x01;
            }
        }
        #[doc = "Internal status synchronization to clock generation logic"]
        pub mod UPDATE_FORWARD {
            pub const offset: u32 = 29;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Synchronization not in process"]
                pub const DIS: u32 = 0;
                #[doc = "Synchronization in process"]
                pub const ENABLE: u32 = 0x01;
            }
        }
        #[doc = "Internal status synchronization from clock generation logic"]
        pub mod UPDATE_REVERSE {
            pub const offset: u32 = 30;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Synchronization not in process"]
                pub const DIS: u32 = 0;
                #[doc = "Synchronization in process"]
                pub const ENABLE: u32 = 0x01;
            }
        }
        #[doc = "Internal updating in clock root"]
        pub mod CHANGING {
            pub const offset: u32 = 31;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Clock Status is not updating currently"]
                pub const DIS: u32 = 0;
                #[doc = "Clock generation logic is updating currently"]
                pub const ENABLE: u32 = 0x01;
            }
        }
    }
    #[doc = "Clock root low power status"]
    pub mod CLOCK_ROOT_STATUS1 {
        #[doc = "Target Setpoint"]
        pub mod TARGET_SETPOINT {
            pub const offset: u32 = 16;
            pub const mask: u32 = 0x0f << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Current Setpoint"]
        pub mod CURRENT_SETPOINT {
            pub const offset: u32 = 20;
            pub const mask: u32 = 0x0f << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Clock frequency decrease request"]
        pub mod DOWN_REQUEST {
            pub const offset: u32 = 24;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Frequency decrease not requested"]
                pub const DIS: u32 = 0;
                #[doc = "Frequency decrease requested"]
                pub const ENABLE: u32 = 0x01;
            }
        }
        #[doc = "Clock frequency decrease finish"]
        pub mod DOWN_DONE {
            pub const offset: u32 = 25;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Frequency decrease not completed"]
                pub const DIS: u32 = 0;
                #[doc = "Frequency decrease completed"]
                pub const ENABLE: u32 = 0x01;
            }
        }
        #[doc = "Clock frequency increase request"]
        pub mod UP_REQUEST {
            pub const offset: u32 = 26;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Frequency increase not requested"]
                pub const DIS: u32 = 0;
                #[doc = "Frequency increase requested"]
                pub const ENABLE: u32 = 0x01;
            }
        }
        #[doc = "Clock frequency increase finish"]
        pub mod UP_DONE {
            pub const offset: u32 = 27;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Frequency increase not completed"]
                pub const DIS: u32 = 0;
                #[doc = "Frequency increase completed"]
                pub const ENABLE: u32 = 0x01;
            }
        }
    }
    #[doc = "Clock root configuration"]
    pub mod CLOCK_ROOT_CONFIG {
        #[doc = "Setpoint present"]
        pub mod SETPOINT_PRESENT {
            pub const offset: u32 = 4;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Setpoint is not implemented."]
                pub const SETPOINT_PRESENT_0: u32 = 0;
                #[doc = "Setpoint is implemented."]
                pub const SETPOINT_PRESENT_1: u32 = 0x01;
            }
        }
    }
    #[doc = "Clock root access control"]
    pub mod CLOCK_ROOT_AUTHEN {
        #[doc = "User access"]
        pub mod TZ_USER {
            pub const offset: u32 = 0;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Clock cannot be changed in user mode"]
                pub const TZ_USER_0: u32 = 0;
                #[doc = "Clock can be changed in user mode"]
                pub const TZ_USER_1: u32 = 0x01;
            }
        }
        #[doc = "Non-secure access"]
        pub mod TZ_NS {
            pub const offset: u32 = 1;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Cannot be changed in Non-secure mode"]
                pub const TZ_NS_0: u32 = 0;
                #[doc = "Can be changed in Non-secure mode"]
                pub const TZ_NS_1: u32 = 0x01;
            }
        }
        #[doc = "Lock truszone setting"]
        pub mod LOCK_TZ {
            pub const offset: u32 = 4;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Trustzone setting is not locked"]
                pub const LOCK_TZ_0: u32 = 0;
                #[doc = "Trustzone setting is locked"]
                pub const LOCK_TZ_1: u32 = 0x01;
            }
        }
        #[doc = "Whitelist"]
        pub mod WHITE_LIST {
            pub const offset: u32 = 8;
            pub const mask: u32 = 0x0f << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "This domain is NOT allowed to change clock"]
                pub const WHITE_LIST_0: u32 = 0;
                #[doc = "This domain is allowed to change clock"]
                pub const WHITE_LIST_1: u32 = 0x01;
            }
        }
        #[doc = "Lock Whitelist"]
        pub mod LOCK_LIST {
            pub const offset: u32 = 12;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Whitelist is not locked"]
                pub const LOCK_LIST_0: u32 = 0;
                #[doc = "Whitelist is locked"]
                pub const LOCK_LIST_1: u32 = 0x01;
            }
        }
        #[doc = "Low power and access control by domain"]
        pub mod DOMAIN_MODE {
            pub const offset: u32 = 16;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Clock does NOT work in Domain Mode"]
                pub const DOMAIN_MODE_0: u32 = 0;
                #[doc = "Clock works in Domain Mode"]
                pub const DOMAIN_MODE_1: u32 = 0x01;
            }
        }
        #[doc = "Low power and access control by Setpoint"]
        pub mod SETPOINT_MODE {
            pub const offset: u32 = 17;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Clock does NOT work in Setpoint Mode"]
                pub const SETPOINT_MODE_0: u32 = 0;
                #[doc = "Clock works in Setpoint Mode"]
                pub const SETPOINT_MODE_1: u32 = 0x01;
            }
        }
        #[doc = "Lock low power and access mode"]
        pub mod LOCK_MODE {
            pub const offset: u32 = 20;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "MODE is not locked"]
                pub const LOCK_MODE_0: u32 = 0;
                #[doc = "MODE is locked"]
                pub const LOCK_MODE_1: u32 = 0x01;
            }
        }
    }
    #[doc = "Clock root access control"]
    pub mod CLOCK_ROOT_AUTHEN_SET {
        #[doc = "User access"]
        pub mod TZ_USER {
            pub const offset: u32 = 0;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Non-secure access"]
        pub mod TZ_NS {
            pub const offset: u32 = 1;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Lock truszone setting"]
        pub mod LOCK_TZ {
            pub const offset: u32 = 4;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Whitelist"]
        pub mod WHITE_LIST {
            pub const offset: u32 = 8;
            pub const mask: u32 = 0x0f << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Lock Whitelist"]
        pub mod LOCK_LIST {
            pub const offset: u32 = 12;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Low power and access control by domain"]
        pub mod DOMAIN_MODE {
            pub const offset: u32 = 16;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Low power and access control by Setpoint"]
        pub mod SETPOINT_MODE {
            pub const offset: u32 = 17;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Lock low power and access mode"]
        pub mod LOCK_MODE {
            pub const offset: u32 = 20;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
    }
    #[doc = "Clock root access control"]
    pub mod CLOCK_ROOT_AUTHEN_CLR {
        #[doc = "User access"]
        pub mod TZ_USER {
            pub const offset: u32 = 0;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Non-secure access"]
        pub mod TZ_NS {
            pub const offset: u32 = 1;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Lock truszone setting"]
        pub mod LOCK_TZ {
            pub const offset: u32 = 4;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Whitelist"]
        pub mod WHITE_LIST {
            pub const offset: u32 = 8;
            pub const mask: u32 = 0x0f << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Lock Whitelist"]
        pub mod LOCK_LIST {
            pub const offset: u32 = 12;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Low power and access control by domain"]
        pub mod DOMAIN_MODE {
            pub const offset: u32 = 16;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Low power and access control by Setpoint"]
        pub mod SETPOINT_MODE {
            pub const offset: u32 = 17;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Lock low power and access mode"]
        pub mod LOCK_MODE {
            pub const offset: u32 = 20;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
    }
    #[doc = "Clock root access control"]
    pub mod CLOCK_ROOT_AUTHEN_TOG {
        #[doc = "User access"]
        pub mod TZ_USER {
            pub const offset: u32 = 0;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Non-secure access"]
        pub mod TZ_NS {
            pub const offset: u32 = 1;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Lock truszone setting"]
        pub mod LOCK_TZ {
            pub const offset: u32 = 4;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Whitelist"]
        pub mod WHITE_LIST {
            pub const offset: u32 = 8;
            pub const mask: u32 = 0x0f << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Lock Whitelist"]
        pub mod LOCK_LIST {
            pub const offset: u32 = 12;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Low power and access control by domain"]
        pub mod DOMAIN_MODE {
            pub const offset: u32 = 16;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Low power and access control by Setpoint"]
        pub mod SETPOINT_MODE {
            pub const offset: u32 = 17;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Lock low power and access mode"]
        pub mod LOCK_MODE {
            pub const offset: u32 = 20;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
    }
    #[doc = "Setpoint setting"]
    pub mod CLOCK_ROOT_SETPOINT {
        #[doc = "Clock divider"]
        pub mod DIV {
            pub const offset: u32 = 0;
            pub const mask: u32 = 0xff << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Clock multiplexer"]
        pub mod MUX {
            pub const offset: u32 = 8;
            pub const mask: u32 = 0x07 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "OFF"]
        pub mod OFF {
            pub const offset: u32 = 24;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "ON"]
                pub const ENABLE: u32 = 0;
                #[doc = "OFF"]
                pub const DISABLE: u32 = 0x01;
            }
        }
        #[doc = "Grade"]
        pub mod GRADE {
            pub const offset: u32 = 28;
            pub const mask: u32 = 0x0f << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
    }
}
pub mod gprshared {
    #[doc = "General Purpose Registers"]
    #[repr(C)]
    pub struct RegisterBlock {
        #[doc = "General Purpose Register"]
        pub GPR_SHARED: crate::RWRegister<u32>,
        #[doc = "General Purpose Register"]
        pub GPR_SHARED_SET: crate::RWRegister<u32>,
        #[doc = "General Purpose Register"]
        pub GPR_SHARED_CLR: crate::RWRegister<u32>,
        #[doc = "General Purpose Register"]
        pub GPR_SHARED_TOG: crate::RWRegister<u32>,
        #[doc = "GPR access control"]
        pub GPR_SHARED_AUTHEN: crate::RWRegister<u32>,
        #[doc = "GPR access control"]
        pub GPR_SHARED_AUTHEN_SET: crate::RWRegister<u32>,
        #[doc = "GPR access control"]
        pub GPR_SHARED_AUTHEN_CLR: crate::RWRegister<u32>,
        #[doc = "GPR access control"]
        pub GPR_SHARED_AUTHEN_TOG: crate::RWRegister<u32>,
    }
    #[doc = "General Purpose Register"]
    pub mod GPR_SHARED {
        #[doc = "GP register"]
        pub mod GPR {
            pub const offset: u32 = 0;
            pub const mask: u32 = 0xffff_ffff << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
    }
    #[doc = "General Purpose Register"]
    pub mod GPR_SHARED_SET {
        #[doc = "GP register"]
        pub mod GPR {
            pub const offset: u32 = 0;
            pub const mask: u32 = 0xffff_ffff << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
    }
    #[doc = "General Purpose Register"]
    pub mod GPR_SHARED_CLR {
        #[doc = "GP register"]
        pub mod GPR {
            pub const offset: u32 = 0;
            pub const mask: u32 = 0xffff_ffff << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
    }
    #[doc = "General Purpose Register"]
    pub mod GPR_SHARED_TOG {
        #[doc = "GP register"]
        pub mod GPR {
            pub const offset: u32 = 0;
            pub const mask: u32 = 0xffff_ffff << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
    }
    #[doc = "GPR access control"]
    pub mod GPR_SHARED_AUTHEN {
        #[doc = "User access"]
        pub mod TZ_USER {
            pub const offset: u32 = 0;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Clock cannot be changed in user mode."]
                pub const CANNOT_CHANGE: u32 = 0;
                #[doc = "Clock can be changed in user mode."]
                pub const CHANGE: u32 = 0x01;
            }
        }
        #[doc = "Non-secure access"]
        pub mod TZ_NS {
            pub const offset: u32 = 1;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Cannot be changed in Non-secure mode."]
                pub const TZ_NS_0: u32 = 0;
                #[doc = "Can be changed in Non-secure mode."]
                pub const TZ_NS_1: u32 = 0x01;
            }
        }
        #[doc = "Lock truszone setting"]
        pub mod LOCK_TZ {
            pub const offset: u32 = 4;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Trustzone setting is not locked."]
                pub const LOCK_TZ_0: u32 = 0;
                #[doc = "Trustzone setting is locked."]
                pub const LOCK_TZ_1: u32 = 0x01;
            }
        }
        #[doc = "Whitelist"]
        pub mod WHITE_LIST {
            pub const offset: u32 = 8;
            pub const mask: u32 = 0x0f << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "This domain is NOT allowed to change clock."]
                pub const WHITE_LIST_0: u32 = 0;
                #[doc = "This domain is allowed to change clock."]
                pub const WHITE_LIST_1: u32 = 0x01;
            }
        }
        #[doc = "Lock Whitelist"]
        pub mod LOCK_LIST {
            pub const offset: u32 = 12;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Whitelist is not locked."]
                pub const LOCK_LIST_0: u32 = 0;
                #[doc = "Whitelist is locked."]
                pub const LOCK_LIST_1: u32 = 0x01;
            }
        }
        #[doc = "Low power and access control by domain"]
        pub mod DOMAIN_MODE {
            pub const offset: u32 = 16;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Clock does NOT work in Domain Mode."]
                pub const DOMAIN_MODE_0: u32 = 0;
                #[doc = "Clock works in Domain Mode."]
                pub const DOMAIN_MODE_1: u32 = 0x01;
            }
        }
        #[doc = "Lock low power and access mode"]
        pub mod LOCK_MODE {
            pub const offset: u32 = 20;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "MODE is not locked."]
                pub const LOCK_MODE_0: u32 = 0;
                #[doc = "MODE is locked."]
                pub const LOCK_MODE_1: u32 = 0x01;
            }
        }
    }
    #[doc = "GPR access control"]
    pub mod GPR_SHARED_AUTHEN_SET {
        #[doc = "User access"]
        pub mod TZ_USER {
            pub const offset: u32 = 0;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Non-secure access"]
        pub mod TZ_NS {
            pub const offset: u32 = 1;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Lock truszone setting"]
        pub mod LOCK_TZ {
            pub const offset: u32 = 4;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Whitelist"]
        pub mod WHITE_LIST {
            pub const offset: u32 = 8;
            pub const mask: u32 = 0x0f << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Lock Whitelist"]
        pub mod LOCK_LIST {
            pub const offset: u32 = 12;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Low power and access control by domain"]
        pub mod DOMAIN_MODE {
            pub const offset: u32 = 16;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Lock low power and access mode"]
        pub mod LOCK_MODE {
            pub const offset: u32 = 20;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
    }
    #[doc = "GPR access control"]
    pub mod GPR_SHARED_AUTHEN_CLR {
        #[doc = "User access"]
        pub mod TZ_USER {
            pub const offset: u32 = 0;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Non-secure access"]
        pub mod TZ_NS {
            pub const offset: u32 = 1;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Lock truszone setting"]
        pub mod LOCK_TZ {
            pub const offset: u32 = 4;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Whitelist"]
        pub mod WHITE_LIST {
            pub const offset: u32 = 8;
            pub const mask: u32 = 0x0f << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Lock Whitelist"]
        pub mod LOCK_LIST {
            pub const offset: u32 = 12;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Low power and access control by domain"]
        pub mod DOMAIN_MODE {
            pub const offset: u32 = 16;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Lock low power and access mode"]
        pub mod LOCK_MODE {
            pub const offset: u32 = 20;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
    }
    #[doc = "GPR access control"]
    pub mod GPR_SHARED_AUTHEN_TOG {
        #[doc = "User access"]
        pub mod TZ_USER {
            pub const offset: u32 = 0;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Non-secure access"]
        pub mod TZ_NS {
            pub const offset: u32 = 1;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Lock truszone setting"]
        pub mod LOCK_TZ {
            pub const offset: u32 = 4;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Whitelist"]
        pub mod WHITE_LIST {
            pub const offset: u32 = 8;
            pub const mask: u32 = 0x0f << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Lock Whitelist"]
        pub mod LOCK_LIST {
            pub const offset: u32 = 12;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Low power and access control by domain"]
        pub mod DOMAIN_MODE {
            pub const offset: u32 = 16;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Lock low power and access mode"]
        pub mod LOCK_MODE {
            pub const offset: u32 = 20;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
    }
}
pub mod oscpll {
    #[doc = "Clock source select Registers"]
    #[repr(C)]
    pub struct RegisterBlock {
        #[doc = "Clock source direct control"]
        pub OSCPLL_DIRECT: crate::RWRegister<u32>,
        #[doc = "Clock source domain control"]
        pub OSCPLL_DOMAIN: crate::RWRegister<u32>,
        #[doc = "Clock source Setpoint setting"]
        pub OSCPLL_SETPOINT: crate::RWRegister<u32>,
        _reserved0: [u8; 0x04],
        #[doc = "Clock source working status"]
        pub OSCPLL_STATUS0: crate::RORegister<u32>,
        #[doc = "Clock source low power status"]
        pub OSCPLL_STATUS1: crate::RORegister<u32>,
        #[doc = "Clock source configuration"]
        pub OSCPLL_CONFIG: crate::RORegister<u32>,
        #[doc = "Clock source access control"]
        pub OSCPLL_AUTHEN: crate::RWRegister<u32>,
    }
    #[doc = "Clock source direct control"]
    pub mod OSCPLL_DIRECT {
        #[doc = "turn on clock source"]
        pub mod ON {
            pub const offset: u32 = 0;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "OSCPLL is OFF"]
                pub const ON_0: u32 = 0;
                #[doc = "OSCPLL is ON"]
                pub const ON_1: u32 = 0x01;
            }
        }
    }
    #[doc = "Clock source domain control"]
    pub mod OSCPLL_DOMAIN {
        #[doc = "Current dependence level"]
        pub mod LEVEL {
            pub const offset: u32 = 0;
            pub const mask: u32 = 0x07 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "This clock source is not needed in any mode, and can be turned off"]
                pub const NO: u32 = 0;
                #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
                pub const R: u32 = 0x01;
                #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
                pub const RW: u32 = 0x02;
                #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
                pub const RWS: u32 = 0x03;
                #[doc = "This clock source is always on in any mode (including SUSPEND)"]
                pub const ALL: u32 = 0x04;
            }
        }
        #[doc = "Dependence level"]
        pub mod LEVEL0 {
            pub const offset: u32 = 16;
            pub const mask: u32 = 0x07 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "This clock source is not needed in any mode, and can be turned off"]
                pub const NO: u32 = 0;
                #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
                pub const R: u32 = 0x01;
                #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
                pub const RW: u32 = 0x02;
                #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
                pub const RWS: u32 = 0x03;
                #[doc = "This clock source is always on in any mode (including SUSPEND)"]
                pub const ALL: u32 = 0x04;
            }
        }
        #[doc = "Depend level"]
        pub mod LEVEL1 {
            pub const offset: u32 = 20;
            pub const mask: u32 = 0x07 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "This clock source is not needed in any mode, and can be turned off"]
                pub const NO: u32 = 0;
                #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
                pub const R: u32 = 0x01;
                #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
                pub const RW: u32 = 0x02;
                #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
                pub const RWS: u32 = 0x03;
                #[doc = "This clock source is always on in any mode (including SUSPEND)"]
                pub const ALL: u32 = 0x04;
            }
        }
        #[doc = "Depend level"]
        pub mod LEVEL2 {
            pub const offset: u32 = 24;
            pub const mask: u32 = 0x07 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "This clock source is not needed in any mode, and can be turned off"]
                pub const NO: u32 = 0;
                #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
                pub const R: u32 = 0x01;
                #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
                pub const RW: u32 = 0x02;
                #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
                pub const RWS: u32 = 0x03;
                #[doc = "This clock source is always on in any mode (including SUSPEND)"]
                pub const ALL: u32 = 0x04;
            }
        }
        #[doc = "Depend level"]
        pub mod LEVEL3 {
            pub const offset: u32 = 28;
            pub const mask: u32 = 0x07 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "This clock source is not needed in any mode, and can be turned off"]
                pub const NO: u32 = 0;
                #[doc = "This clock source is needed in RUN mode, but not needed in WAIT, STOP mode"]
                pub const R: u32 = 0x01;
                #[doc = "This clock source is needed in RUN and WAIT mode, but not needed in STOP mode"]
                pub const RW: u32 = 0x02;
                #[doc = "This clock source is needed in RUN, WAIT and STOP mode"]
                pub const RWS: u32 = 0x03;
                #[doc = "This clock source is always on in any mode (including SUSPEND)"]
                pub const ALL: u32 = 0x04;
            }
        }
    }
    #[doc = "Clock source Setpoint setting"]
    pub mod OSCPLL_SETPOINT {
        #[doc = "Setpoint"]
        pub mod SETPOINT {
            pub const offset: u32 = 0;
            pub const mask: u32 = 0xffff << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Standby"]
        pub mod STANDBY {
            pub const offset: u32 = 16;
            pub const mask: u32 = 0xffff << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
    }
    #[doc = "Clock source working status"]
    pub mod OSCPLL_STATUS0 {
        #[doc = "Clock source current state"]
        pub mod ON {
            pub const offset: u32 = 0;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Clock source is OFF"]
                pub const ON_0: u32 = 0;
                #[doc = "Clock source is ON"]
                pub const ON_1: u32 = 0x01;
            }
        }
        #[doc = "Clock source active"]
        pub mod STATUS_EARLY {
            pub const offset: u32 = 4;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Clock source is not active"]
                pub const DIS: u32 = 0;
                #[doc = "Clock source is active"]
                pub const ENABLE: u32 = 0x01;
            }
        }
        #[doc = "Clock source ready"]
        pub mod STATUS_LATE {
            pub const offset: u32 = 5;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Clock source is not ready to use"]
                pub const DIS: u32 = 0;
                #[doc = "Clock source is ready to use"]
                pub const ENABLE: u32 = 0x01;
            }
        }
        #[doc = "Domains that own this clock source"]
        pub mod ACTIVE_DOMAIN {
            pub const offset: u32 = 8;
            pub const mask: u32 = 0x0f << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Clock not owned by any domain"]
                pub const NO: u32 = 0;
                #[doc = "Clock owned by Domain0"]
                pub const ZERO: u32 = 0x01;
                #[doc = "Clock owned by Domain1"]
                pub const TWO: u32 = 0x02;
                #[doc = "Clock owned by Domain0 and Domain1"]
                pub const THREE: u32 = 0x03;
                #[doc = "Clock owned by Domain2"]
                pub const FOUR: u32 = 0x04;
                #[doc = "Clock owned by Domain0 and Domain2"]
                pub const FIVE: u32 = 0x05;
                #[doc = "Clock owned by Domain1 and Domain2"]
                pub const SIX: u32 = 0x06;
                #[doc = "Clock owned by Domain0, Domain1 and Domain 2"]
                pub const SEVEN: u32 = 0x07;
                #[doc = "Clock owned by Domain3"]
                pub const EIGHT: u32 = 0x08;
                #[doc = "Clock owned by Domain0 and Domain3"]
                pub const NINE: u32 = 0x09;
                #[doc = "Clock owned by Domain1 and Domain3"]
                pub const TEN: u32 = 0x0a;
                #[doc = "Clock owned by Domain2 and Domain3"]
                pub const ELV: u32 = 0x0b;
                #[doc = "Clock owned by Domain0, Domain 1, and Domain3"]
                pub const TW: u32 = 0x0c;
                #[doc = "Clock owned by Domain0, Domain 2, and Domain3"]
                pub const TH: u32 = 0x0d;
                #[doc = "Clock owned by Domain1, Domain 2, and Domain3"]
                pub const FR: u32 = 0x0e;
                #[doc = "Clock owned by all domains"]
                pub const ALL: u32 = 0x0f;
            }
        }
        #[doc = "Enable status from each domain"]
        pub mod DOMAIN_ENABLE {
            pub const offset: u32 = 12;
            pub const mask: u32 = 0x0f << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "No domain request"]
                pub const NO: u32 = 0;
                #[doc = "Request from Domain0"]
                pub const ZERO: u32 = 0x01;
                #[doc = "Request from Domain1"]
                pub const TWO: u32 = 0x02;
                #[doc = "Request from Domain0 and Domain1"]
                pub const THREE: u32 = 0x03;
                #[doc = "Request from Domain2"]
                pub const FOUR: u32 = 0x04;
                #[doc = "Request from Domain0 and Domain2"]
                pub const FIVE: u32 = 0x05;
                #[doc = "Request from Domain1 and Domain2"]
                pub const SIX: u32 = 0x06;
                #[doc = "Request from Domain0, Domain1 and Domain 2"]
                pub const SEVEN: u32 = 0x07;
                #[doc = "Request from Domain3"]
                pub const EIGHT: u32 = 0x08;
                #[doc = "Request from Domain0 and Domain3"]
                pub const NINE: u32 = 0x09;
                #[doc = "Request from Domain1 and Domain3"]
                pub const TEN: u32 = 0x0a;
                #[doc = "Request from Domain2 and Domain3"]
                pub const ELV: u32 = 0x0b;
                #[doc = "Request from Domain0, Domain 1, and Domain3"]
                pub const TW: u32 = 0x0c;
                #[doc = "Request from Domain0, Domain 2, and Domain3"]
                pub const TH: u32 = 0x0d;
                #[doc = "Request from Domain1, Domain 2, and Domain3"]
                pub const FR: u32 = 0x0e;
                #[doc = "Request from all domains"]
                pub const ALL: u32 = 0x0f;
            }
        }
        #[doc = "In use"]
        pub mod IN_USE {
            pub const offset: u32 = 28;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Clock source is not being used by clock roots"]
                pub const DIS: u32 = 0;
                #[doc = "Clock source is being used by clock roots"]
                pub const ENABLE: u32 = 0x01;
            }
        }
    }
    #[doc = "Clock source low power status"]
    pub mod OSCPLL_STATUS1 {
        #[doc = "Domain0 Low Power Mode"]
        pub mod CPU0_MODE {
            pub const offset: u32 = 0;
            pub const mask: u32 = 0x03 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Run"]
                pub const RUN: u32 = 0;
                #[doc = "Wait"]
                pub const WAIT: u32 = 0x01;
                #[doc = "Stop"]
                pub const STOP: u32 = 0x02;
                #[doc = "Suspend"]
                pub const SUSPEND: u32 = 0x03;
            }
        }
        #[doc = "Domain0 request enter Low Power Mode"]
        pub mod CPU0_MODE_REQUEST {
            pub const offset: u32 = 2;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "No request"]
                pub const DIS: u32 = 0;
                #[doc = "Request from domain to enter Low Power Mode"]
                pub const ENABLE: u32 = 0x01;
            }
        }
        #[doc = "Domain0 Low Power Mode task done"]
        pub mod CPU0_MODE_DONE {
            pub const offset: u32 = 3;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Clock is not gated"]
                pub const DIS: u32 = 0;
                #[doc = "Clock is gated-off"]
                pub const ENABLE: u32 = 0x01;
            }
        }
        #[doc = "Domain1 Low Power Mode"]
        pub mod CPU1_MODE {
            pub const offset: u32 = 4;
            pub const mask: u32 = 0x03 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Run"]
                pub const RUN: u32 = 0;
                #[doc = "Wait"]
                pub const WAIT: u32 = 0x01;
                #[doc = "Stop"]
                pub const STOP: u32 = 0x02;
                #[doc = "Suspend"]
                pub const SUSPEND: u32 = 0x03;
            }
        }
        #[doc = "Domain1 request enter Low Power Mode"]
        pub mod CPU1_MODE_REQUEST {
            pub const offset: u32 = 6;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "No request"]
                pub const DIS: u32 = 0;
                #[doc = "Request from domain to enter Low Power Mode"]
                pub const ENABLE: u32 = 0x01;
            }
        }
        #[doc = "Domain1 Low Power Mode task done"]
        pub mod CPU1_MODE_DONE {
            pub const offset: u32 = 7;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Clock is not gated"]
                pub const DIS: u32 = 0;
                #[doc = "Clock is gated-off"]
                pub const ENABLE: u32 = 0x01;
            }
        }
        #[doc = "Domain2 Low Power Mode"]
        pub mod CPU2_MODE {
            pub const offset: u32 = 8;
            pub const mask: u32 = 0x03 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Run"]
                pub const RUN: u32 = 0;
                #[doc = "Wait"]
                pub const WAIT: u32 = 0x01;
                #[doc = "Stop"]
                pub const STOP: u32 = 0x02;
                #[doc = "Suspend"]
                pub const SUSPEND: u32 = 0x03;
            }
        }
        #[doc = "Domain2 request enter Low Power Mode"]
        pub mod CPU2_MODE_REQUEST {
            pub const offset: u32 = 10;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "No request"]
                pub const DIS: u32 = 0;
                #[doc = "Request from domain to enter Low Power Mode"]
                pub const ENABLE: u32 = 0x01;
            }
        }
        #[doc = "Domain2 Low Power Mode task done"]
        pub mod CPU2_MODE_DONE {
            pub const offset: u32 = 11;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Clock is not gated"]
                pub const DIS: u32 = 0;
                #[doc = "Clock is gated-off"]
                pub const ENABLE: u32 = 0x01;
            }
        }
        #[doc = "Domain3 Low Power Mode"]
        pub mod CPU3_MODE {
            pub const offset: u32 = 12;
            pub const mask: u32 = 0x03 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Run"]
                pub const RUN: u32 = 0;
                #[doc = "Wait"]
                pub const WAIT: u32 = 0x01;
                #[doc = "Stop"]
                pub const STOP: u32 = 0x02;
                #[doc = "Suspend"]
                pub const SUSPEND: u32 = 0x03;
            }
        }
        #[doc = "Domain3 request enter Low Power Mode"]
        pub mod CPU3_MODE_REQUEST {
            pub const offset: u32 = 14;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "No request"]
                pub const DIS: u32 = 0;
                #[doc = "Request from domain to enter Low Power Mode"]
                pub const ENABLE: u32 = 0x01;
            }
        }
        #[doc = "Domain3 Low Power Mode task done"]
        pub mod CPU3_MODE_DONE {
            pub const offset: u32 = 15;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Clock is not gated"]
                pub const DIS: u32 = 0;
                #[doc = "Clock is gated-off"]
                pub const ENABLE: u32 = 0x01;
            }
        }
        #[doc = "Next Setpoint to change to"]
        pub mod TARGET_SETPOINT {
            pub const offset: u32 = 16;
            pub const mask: u32 = 0x0f << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Current Setpoint"]
        pub mod CURRENT_SETPOINT {
            pub const offset: u32 = 20;
            pub const mask: u32 = 0x0f << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Clock gate turn off request from GPC Setpoint"]
        pub mod SETPOINT_OFF_REQUEST {
            pub const offset: u32 = 24;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "No request"]
                pub const DIS: u32 = 0;
                #[doc = "Clock gate requested to be turned off"]
                pub const ENABLE: u32 = 0x01;
            }
        }
        #[doc = "Clock source turn off finish from GPC Setpoint"]
        pub mod SETPOINT_OFF_DONE {
            pub const offset: u32 = 25;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Clock source is not turned off"]
                pub const DIS: u32 = 0;
                #[doc = "Clock source is turned off"]
                pub const ENABLE: u32 = 0x01;
            }
        }
        #[doc = "Clock gate turn on request from GPC Setpoint"]
        pub mod SETPOINT_ON_REQUEST {
            pub const offset: u32 = 26;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "No request"]
                pub const DIS: u32 = 0;
                #[doc = "Clock gate requested to be turned on"]
                pub const ENABLE: u32 = 0x01;
            }
        }
        #[doc = "Clock gate turn on finish from GPC Setpoint"]
        pub mod SETPOINT_ON_DONE {
            pub const offset: u32 = 27;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "No request"]
                pub const DIS: u32 = 0;
                #[doc = "Request to turn on clock gate"]
                pub const ENABLE: u32 = 0x01;
            }
        }
        #[doc = "Clock gate turn off request from GPC standby"]
        pub mod STANDBY_IN_REQUEST {
            pub const offset: u32 = 28;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "No request"]
                pub const DIS: u32 = 0;
                #[doc = "Clock gate requested to be turned off"]
                pub const ENABLE: u32 = 0x01;
            }
        }
        #[doc = "Clock source turn off finish from GPC standby"]
        pub mod STANDBY_IN_DONE {
            pub const offset: u32 = 29;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Clock source is not turned off"]
                pub const DIS: u32 = 0;
                #[doc = "Clock source is turned off"]
                pub const ENABLE: u32 = 0x01;
            }
        }
        #[doc = "Clock gate turn on finish from GPC standby"]
        pub mod STANDBY_OUT_DONE {
            pub const offset: u32 = 30;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Request to turn on Clock gate is not complete"]
                pub const DIS: u32 = 0;
                #[doc = "Request to turn on Clock gate is complete"]
                pub const ENABLE: u32 = 0x01;
            }
        }
        #[doc = "Clock gate turn on request from GPC standby"]
        pub mod STANDBY_OUT_REQUEST {
            pub const offset: u32 = 31;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "No request"]
                pub const DIS: u32 = 0;
                #[doc = "Clock gate requested to be turned on"]
                pub const ENABLE: u32 = 0x01;
            }
        }
    }
    #[doc = "Clock source configuration"]
    pub mod OSCPLL_CONFIG {
        #[doc = "Automode Present"]
        pub mod AUTOMODE_PRESENT {
            pub const offset: u32 = 1;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Not present"]
                pub const NOTPRESENT: u32 = 0;
                #[doc = "Present"]
                pub const PRESENT: u32 = 0x01;
            }
        }
        #[doc = "Setpoint present"]
        pub mod SETPOINT_PRESENT {
            pub const offset: u32 = 4;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Setpoint is not implemented."]
                pub const SETPOINT_PRESENT_0: u32 = 0;
                #[doc = "Setpoint is implemented."]
                pub const SETPOINT_PRESENT_1: u32 = 0x01;
            }
        }
    }
    #[doc = "Clock source access control"]
    pub mod OSCPLL_AUTHEN {
        #[doc = "User access"]
        pub mod TZ_USER {
            pub const offset: u32 = 0;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Clock cannot be changed in user mode."]
                pub const TZ_USER_0: u32 = 0;
                #[doc = "Clock can be changed in user mode."]
                pub const TZ_USER_1: u32 = 0x01;
            }
        }
        #[doc = "Non-secure access"]
        pub mod TZ_NS {
            pub const offset: u32 = 1;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Cannot be changed in Non-secure mode."]
                pub const TZ_NS_0: u32 = 0;
                #[doc = "Can be changed in Non-secure mode."]
                pub const TZ_NS_1: u32 = 0x01;
            }
        }
        #[doc = "lock truszone setting"]
        pub mod LOCK_TZ {
            pub const offset: u32 = 4;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Trustzone setting is not locked."]
                pub const LOCK_TZ_0: u32 = 0;
                #[doc = "Trustzone setting is locked."]
                pub const LOCK_TZ_1: u32 = 0x01;
            }
        }
        #[doc = "Whitelist"]
        pub mod WHITE_LIST {
            pub const offset: u32 = 8;
            pub const mask: u32 = 0x0f << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "Lock Whitelist"]
        pub mod LOCK_LIST {
            pub const offset: u32 = 12;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Whitelist is not locked."]
                pub const LOCK_LIST_0: u32 = 0;
                #[doc = "Whitelist is locked."]
                pub const LOCK_LIST_1: u32 = 0x01;
            }
        }
        #[doc = "Low power and access control by domain"]
        pub mod DOMAIN_MODE {
            pub const offset: u32 = 16;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "Clock does not work in Domain Mode."]
                pub const DOMAIN_MODE_0: u32 = 0;
                #[doc = "Clock works in Domain Mode."]
                pub const DOMAIN_MODE_1: u32 = 0x01;
            }
        }
        #[doc = "LPCG works in Setpoint controlled Mode."]
        pub mod SETPOINT_MODE {
            pub const offset: u32 = 17;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {}
        }
        #[doc = "CPU Low Power Mode"]
        pub mod CPULPM {
            pub const offset: u32 = 18;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "PLL does not function in Low power Mode"]
                pub const DISABLE: u32 = 0;
                #[doc = "PLL functions in Low Power Mode"]
                pub const ENABLE: u32 = 0x01;
            }
        }
        #[doc = "Lock low power and access mode"]
        pub mod LOCK_MODE {
            pub const offset: u32 = 20;
            pub const mask: u32 = 0x01 << offset;
            pub mod R {}
            pub mod W {}
            pub mod RW {
                #[doc = "MODE is not locked."]
                pub const LOCK_MODE_0: u32 = 0;
                #[doc = "MODE is locked."]
                pub const LOCK_MODE_1: u32 = 0x01;
            }
        }
    }
}
